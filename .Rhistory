num_taxa = 12,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
pivot_wider(names_from = group_by,
values_from = mean_value) %>%
column_to_rownames(var = "taxon") %>%
t() %>%
as.data.frame()
View(Pmtag)
# Phyla
Pmtag <- summarize_taxonomy(input = mtag, level = 2, report_higher_tax = F) %>%
plot_taxa_bars(.,
mtag$map_loaded,
"sampleID",
num_taxa = 12,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
mutate(Dataset = "mTAG")
View(Pmtag)
# Phyla
Pmtag <- summarize_taxonomy(input = mtag, level = 2, report_higher_tax = F) %>%
plot_taxa_bars(.,
mtag$map_loaded,
"sampleID",
num_taxa = 12,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
pivot_wider(names_from = group_by,
values_from = mean_value) %>%
column_to_rownames(var = "taxon") %>%
t() %>%
as.data.frame()
Pitag <- summarize_taxonomy(input = itag, level = 2, report_higher_tax = F) %>%
plot_taxa_bars(.,
itag$map_loaded,
"sampleID",
num_taxa = 20,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
filter(taxon %in% Pmtag$taxon) %>%
pivot_wider(names_from = group_by,
values_from = mean_value) %>%
column_to_rownames(var = "taxon") %>%
t() %>%
as.data.frame()
View(Pitag)
View(Pitag)
Pitag <- summarize_taxonomy(input = itag, level = 2, report_higher_tax = F) %>%
plot_taxa_bars(.,
itag$map_loaded,
"sampleID",
num_taxa = 20,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
filter(taxon %in% Pmtag$taxon) %>%
pivot_wider(names_from = group_by,
values_from = mean_value) %>%
column_to_rownames(var = "taxon") %>%
t() %>%
as.data.frame()
View(Pitag)
View(Pmtag)
View(Pmtag)
Pitag <- summarize_taxonomy(input = itag, level = 2, report_higher_tax = F) %>%
plot_taxa_bars(.,
itag$map_loaded,
"sampleID",
num_taxa = 20,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
filter(taxon %in% names(Pmtag)) %>%
pivot_wider(names_from = group_by,
values_from = mean_value) %>%
column_to_rownames(var = "taxon") %>%
t() %>%
as.data.frame()
View(Pitag)
View(Pitag)
View(Pmtag)
sum(rownames(Pmtag) != rownames(Pitag)) # Good
names(iTaggPmtager_gc) <- paste0(names(Pmtag),"_m")
names(Pmtag) <- paste0(names(Pmtag),"_m")
names(Pitag) <- paste0(names(Pitag),"_i")
Combined_phyla = data.frame(Pmtag, Pitag)
View(Combined_phyla)
rev(names(Pmtag))
ggplot(Combined_guilds, aes(x = Acidobacteriota_i, y = Acidobacteriota_m)) +
geom_point(size = 2) +
stat_smooth(method = "lm", se = F, size = 0.5, linetype = 1) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", size = 0.2, color = "grey10") +
theme_bw() +
theme(axis.text = element_text(size = 8))
Aci <- ggplot(Combined_phyla, aes(x = Acidobacteriota_i, y = Acidobacteriota_m)) +
geom_point(size = 2) +
stat_smooth(method = "lm", se = F, size = 0.5, linetype = 1) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", size = 0.2, color = "grey10") +
theme_bw() +
theme(axis.text = element_text(size = 8))
Aci
stat_smooth(method = "lm", se = F, size = 0.5, linetype = 1) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", size = 0.2, color = "grey10") +
theme_bw()
Aci <- ggplot(Combined_phyla, aes(x = Acidobacteriota_i, y = Acidobacteriota_m)) +
geom_point(size = 2) +
labs(x = NULL, y = NULL) +
stat_smooth(method = "lm", se = F, size = 0.5, linetype = 1) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", size = 0.2, color = "grey10") +
theme_bw()
Aci
Aci <- ggplot(Combined_phyla, aes(x = Acidobacteriota_i, y = Acidobacteriota_m)) +
geom_point(size = 2) +
labs(x = NULL, y = NULL) +
stat_smooth(method = "lm", se = F, size = 0.5, linetype = 1) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", size = 0.2, color = "grey10") +
ggtitle("Acidobacteriota") +
theme_bw()
Aci
Aci <- ggplot(Combined_phyla, aes(x = Acidobacteriota_i, y = Acidobacteriota_m)) +
geom_point(size = 2) +
labs(x = NULL, y = NULL) +
stat_smooth(method = "lm", se = F, size = 0.5, linetype = 1) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", size = 0.2, color = "grey10") +
ggtitle("Acidobacteriota", hjust = 0.5) +
theme_bw()
Aci <- ggplot(Combined_phyla, aes(x = Acidobacteriota_i, y = Acidobacteriota_m)) +
geom_point(size = 2) +
labs(x = NULL, y = NULL) +
stat_smooth(method = "lm", se = F, size = 0.5, linetype = 1) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", size = 0.2, color = "grey10") +
ggtitle("Acidobacteriota") +
theme_bw() +
theme(plot.title = element_text(hjust = 1))
Aci
Aci <- ggplot(Combined_phyla, aes(x = Acidobacteriota_i, y = Acidobacteriota_m)) +
geom_point(size = 2) +
labs(x = NULL, y = NULL) +
stat_smooth(method = "lm", se = F, size = 0.5, linetype = 1) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", size = 0.2, color = "grey10") +
ggtitle("Acidobacteriota") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
Aci
Aci <- ggplot(Combined_phyla, aes(x = "Acidobacteriota_i", y = "Acidobacteriota_m")) +
geom_point(size = 2) +
labs(x = NULL, y = NULL) +
stat_smooth(method = "lm", se = F, size = 0.5, linetype = 1) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", size = 0.2, color = "grey10") +
ggtitle("Acidobacteriota") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
Aci
taxon = "Acidobacteriota"
compare_abund <- function(data, taxon) {
data <- data %>%
dplyr::select(paste0(taxon, "_i"), paste0(taxon, "_m"))
ggplot(data, aes(x = data[,1], y = data[,2])) +
geom_point(size = 2) +
labs(x = NULL, y = NULL) +
stat_smooth(method = "lm", se = F, size = 0.5, linetype = 1) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", size = 0.2, color = "grey10") +
ggtitle(taxon) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
}
compare_abund(Combined_phyla, "Acidobacteriota")
Aci <- compare_abund(Combined_phyla, "Acidobacteriota")
p1 <- compare_abund(Combined_phyla, "Acidobacteriota")
rm(Aci)
View(Pmtag)
# Phyla
Pmtag <- summarize_taxonomy(input = mtag, level = 2, report_higher_tax = F) %>%
plot_taxa_bars(.,
mtag$map_loaded,
"sampleID",
num_taxa = 12,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
pivot_wider(names_from = group_by,
values_from = mean_value) %>%
column_to_rownames(var = "taxon") %>%
t() %>%
as.data.frame()
Pitag <- summarize_taxonomy(input = itag, level = 2, report_higher_tax = F) %>%
plot_taxa_bars(.,
itag$map_loaded,
"sampleID",
num_taxa = 20,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
filter(taxon %in% names(Pmtag)) %>%
pivot_wider(names_from = group_by,
values_from = mean_value) %>%
column_to_rownames(var = "taxon") %>%
t() %>%
as.data.frame()
sum(rownames(Pmtag) != rownames(Pitag)) # Good
names_p <- rev(names(Pmtag))
names_p
length(names_p)
# Run loop through the taxa
p <- list()
for (i in length(names_p)) {
p[[i]] <- compare_abund(data = Combined_phyla, taxa = names_p[i])
}
# Run loop through the taxa
p <- list()
for (i in length(names_p)) {
p[[i]] <- compare_abund(data = Combined_phyla, taxon = names_p[i])
}
grid.arrange(p[[1]], p[[2]], p[[3]], p[[4]],
p[[5]], p[[6]], p[[7]], p[[8]],
p[[9]], p[[10]], p[[11]], p[[12]],
ncol = 4, nrow = 3,
bottom = "iTAG PCR amplicon", left = "mTAG metagenomic")
p[[1]]
p[[12]]
# Run loop through the taxa
p <- list()
for (i in length(names_p)) {
p[[i]] = compare_abund(data = Combined_phyla, taxon = names_p[i])
}
p[[1]] = compare_abund(data = Combined_phyla, taxon = names_p[1])
rm(p1)
# Run loop through the taxa
p <- list()
p[[1]] = compare_abund(data = Combined_phyla, taxon = names_p[1])
p[[2]] = compare_abund(data = Combined_phyla, taxon = names_p[2])
length(names_p)
names_p[1]
compare_abund(data = Combined_phyla, taxon = names_p[1])
# Run loop through the taxa
p <- list()
for (i in length(names_p)) {
p[[i]] <- compare_abund(data = Combined_phyla, taxon = names_p[i])
}
p[[1]] <- compare_abund(data = Combined_phyla, taxon = names_p[1]
q
p[[1]] <- compare_abund(data = Combined_phyla, taxon = names_p[1])
p[[1]]
p[[2]] <- compare_abund(data = Combined_phyla, taxon = names_p[2])
p[[2]]
p[[3]]
p[[3]] <- compare_abund(data = Combined_phyla, taxon = names_p[3])
p[[4]] <- compare_abund(data = Combined_phyla, taxon = names_p[4])
p[[5]] <- compare_abund(data = Combined_phyla, taxon = names_p[5])
p[[6]] <- compare_abund(data = Combined_phyla, taxon = names_p[6])
p[[7]] <- compare_abund(data = Combined_phyla, taxon = names_p[7])
p[[8]] <- compare_abund(data = Combined_phyla, taxon = names_p[8])
p[[9]] <- compare_abund(data = Combined_phyla, taxon = names_p[9])
p[[10]] <- compare_abund(data = Combined_phyla, taxon = names_p[10])
names(Pitag)
names(Combined_phyla)
names_p
names_p[10] <- "RCP2.54"
p[[10]] <- compare_abund(data = Combined_phyla, taxon = names_p[10])
p[[11]] <- compare_abund(data = Combined_phyla, taxon = names_p[11])
p[[12]] <- compare_abund(data = Combined_phyla, taxon = names_p[12])
grid.arrange(p[[1]], p[[2]], p[[3]], p[[4]],
p[[5]], p[[6]], p[[7]], p[[8]],
p[[9]], p[[10]], p[[11]], p[[12]],
ncol = 4, nrow = 3,
bottom = "iTAG PCR amplicon", left = "mTAG metagenomic")
# Run loop through the taxa
ps <- list()
for (i in length(names_p)) {
ps[[i]] <- compare_abund(data = Combined_phyla, taxon = names_p[i])
}
# Function for plotting
compare_abund <- function(data, taxon) {
data <- data %>%
dplyr::select(paste0(taxon, "_i"), paste0(taxon, "_m"))
ggplot(data, aes(x = data[,1], y = data[,2])) +
geom_point(size = 2) +
labs(x = NULL, y = NULL) +
stat_smooth(method = "lm", se = F, size = 0.5, linetype = 1) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", size = 0.2, color = "grey10") +
ggtitle(taxon) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 8, vjust = -2))
}
# Run loop through the taxa
p <- list()
length(names_p)
# Run loop through the taxa
p <- list()
for (i in 1:length(names_p)) {
p[[i]] <- compare_abund(data = Combined_phyla, taxon = names_p[i])
}
grid.arrange(p[[1]], p[[2]], p[[3]], p[[4]],
p[[5]], p[[6]], p[[7]], p[[8]],
p[[9]], p[[10]], p[[11]], p[[12]],
ncol = 4, nrow = 3,
bottom = "iTAG PCR amplicon", left = "mTAG metagenomic")
# Function for plotting
compare_abund <- function(data, taxon) {
data <- data %>%
dplyr::select(paste0(taxon, "_i"), paste0(taxon, "_m"))
ggplot(data, aes(x = data[,1], y = data[,2])) +
geom_point(size = 2) +
labs(x = NULL, y = NULL) +
stat_smooth(method = "lm", se = F, size = 0.5, linetype = 1) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", size = 0.2, color = "grey10") +
ggtitle(taxon) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 10, vjust = -1),
axis.text = element_text(size = 8))
}
# Run loop through the taxa
p <- list()
for (i in 1:length(names_p)) {
p[[i]] <- compare_abund(data = Combined_phyla, taxon = names_p[i])
}
grid.arrange(p[[1]], p[[2]], p[[3]], p[[4]],
p[[5]], p[[6]], p[[7]], p[[8]],
p[[9]], p[[10]], p[[11]], p[[12]],
ncol = 4, nrow = 3,
bottom = "iTAG PCR amplicon", left = "mTAG metagenomic")
# Function for plotting
compare_abund <- function(data, taxon) {
data <- data %>%
dplyr::select(paste0(taxon, "_i"), paste0(taxon, "_m"))
ggplot(data, aes(x = data[,1], y = data[,2])) +
geom_point(size = 2) +
labs(x = NULL, y = NULL) +
stat_smooth(method = "lm", se = F, size = 0.5, linetype = 1) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", size = 0.2, color = "grey10") +
ggtitle(taxon) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 10, vjust = -1),
axis.text = element_text(size = 6))
}
# Run loop through the taxa
p <- list()
for (i in 1:length(names_p)) {
p[[i]] <- compare_abund(data = Combined_phyla, taxon = names_p[i])
}
grid.arrange(p[[1]], p[[2]], p[[3]], p[[4]],
p[[5]], p[[6]], p[[7]], p[[8]],
p[[9]], p[[10]], p[[11]], p[[12]],
ncol = 4, nrow = 3,
bottom = "iTAG PCR amplicon", left = "mTAG metagenomic")
# Phyla
Gmtag <- summarize_taxonomy(input = mtag, level = 2, report_higher_tax = F) %>%
plot_taxa_bars(.,
mtag$map_loaded,
"sampleID",
num_taxa = 12,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
pivot_wider(names_from = group_by,
values_from = mean_value) %>%
column_to_rownames(var = "taxon") %>%
t() %>%
as.data.frame()
Gitag <- summarize_taxonomy(input = itag, level = 2, report_higher_tax = F) %>%
plot_taxa_bars(.,
itag$map_loaded,
"sampleID",
num_taxa = 20,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
filter(taxon %in% names(Pmtag)) %>%
pivot_wider(names_from = group_by,
values_from = mean_value) %>%
column_to_rownames(var = "taxon") %>%
t() %>%
as.data.frame()
sum(rownames(Gmtag) != rownames(Gitag)) # Good
names_g <- rev(names(Gmtag))
names_g
# Guilds
Gmtag <- summarize_taxonomy(input = mtag, level = 9, report_higher_tax = F) %>%
plot_taxa_bars(.,
mtag$map_loaded,
"sampleID",
num_taxa = 12,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
pivot_wider(names_from = group_by,
values_from = mean_value) %>%
column_to_rownames(var = "taxon") %>%
t() %>%
as.data.frame()
Gitag <- summarize_taxonomy(input = itag, level = 9, report_higher_tax = F) %>%
plot_taxa_bars(.,
itag$map_loaded,
"sampleID",
num_taxa = 20,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
filter(taxon %in% names(Pmtag)) %>%
pivot_wider(names_from = group_by,
values_from = mean_value) %>%
column_to_rownames(var = "taxon") %>%
t() %>%
as.data.frame()
sum(rownames(Gmtag) != rownames(Gitag)) # Good
names_g <- rev(names(Gmtag))
names_g
# Guilds
Gmtag <- summarize_taxonomy(input = mtag, level = 9, report_higher_tax = F) %>%
plot_taxa_bars(.,
mtag$map_loaded,
"sampleID",
num_taxa = 12,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
filter(taxon != "NA") %>%
pivot_wider(names_from = group_by,
values_from = mean_value) %>%
column_to_rownames(var = "taxon") %>%
t() %>%
as.data.frame()
Gitag <- summarize_taxonomy(input = itag, level = 9, report_higher_tax = F) %>%
plot_taxa_bars(.,
itag$map_loaded,
"sampleID",
num_taxa = 20,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
filter(taxon != "NA") %>%
filter(taxon %in% names(Pmtag)) %>%
pivot_wider(names_from = group_by,
values_from = mean_value) %>%
column_to_rownames(var = "taxon") %>%
t() %>%
as.data.frame()
sum(rownames(Gmtag) != rownames(Gitag)) # Good
names_g <- rev(names(Gmtag))
names_g
names(Gmtag) <- paste0(names(Gmtag),"_m")
names(Gitag) <- paste0(names(Gitag),"_i")
names(Gitag)
Gitag <- summarize_taxonomy(input = itag, level = 9, report_higher_tax = F) %>%
plot_taxa_bars(.,
itag$map_loaded,
"sampleID",
num_taxa = 20,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
filter(taxon != "NA") %>%
filter(taxon %in% names(Pmtag)) %>%
pivot_wider(names_from = group_by,
values_from = mean_value) %>%
column_to_rownames(var = "taxon") %>%
t() %>%
as.data.frame()
View(Gitag)
# Guilds
Gmtag <- summarize_taxonomy(input = mtag, level = 9, report_higher_tax = F) %>%
plot_taxa_bars(.,
mtag$map_loaded,
"sampleID",
num_taxa = 12,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
filter(taxon != "NA") %>%
pivot_wider(names_from = group_by,
values_from = mean_value) %>%
column_to_rownames(var = "taxon") %>%
t() %>%
as.data.frame()
View(Gmtag)
Gitag <- summarize_taxonomy(input = itag, level = 9, report_higher_tax = F) %>%
plot_taxa_bars(.,
itag$map_loaded,
"sampleID",
num_taxa = 20,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
filter(taxon != "NA") %>%
filter(taxon %in% names(Gmtag)) %>%
pivot_wider(names_from = group_by,
values_from = mean_value) %>%
column_to_rownames(var = "taxon") %>%
t() %>%
as.data.frame()
sum(rownames(Gmtag) != rownames(Gitag)) # Good
names_g <- rev(names(Gmtag))
names(Gmtag) <- paste0(names(Gmtag),"_m")
names(Gitag) <- paste0(names(Gitag),"_i")
Combined_guilds = data.frame(Gmtag, Gitag)
names(Combined_guilds)
# Run loop through the taxa
g <- list()
for (i in 1:length(names_g)) {
g[[i]] <- compare_abund(data = Combined_guilds, taxon = names_g[i])
}
grid.arrange(g[[1]], g[[2]], g[[3]], g[[4]],
g[[5]], g[[6]], g[[7]], g[[8]],
g[[9]], g[[10]], g[[11]],
ncol = 4, nrow = 3,
bottom = "iTAG PCR amplicon", left = "mTAG metagenomic")
grid.arrange(p[[1]], p[[2]], p[[3]], p[[4]],
p[[5]], p[[6]], p[[7]], p[[8]],
p[[9]], p[[10]], p[[11]], p[[12]],
ncol = 4, nrow = 3,
bottom = "iTAG PCR amplicon", left = "mTAG metagenomic")
png("Figures/CompareMethodsPhyla.png", width = 8, height = 6, units = "in", res = 300)
grid.arrange(p[[1]], p[[2]], p[[3]], p[[4]],
p[[5]], p[[6]], p[[7]], p[[8]],
p[[9]], p[[10]], p[[11]], p[[12]],
ncol = 4, nrow = 3,
bottom = "iTAG PCR amplicon", left = "mTAG metagenomic")
dev.off()
png("Figures/CompareMethodsGuilds.png", width = 8, height = 6, units = "in", res = 300)
grid.arrange(g[[1]], g[[2]], g[[3]], g[[4]],
g[[5]], g[[6]], g[[7]], g[[8]],
g[[9]], g[[10]], g[[11]],
ncol = 4, nrow = 3,
bottom = "iTAG PCR amplicon", left = "mTAG metagenomic")
dev.off()
