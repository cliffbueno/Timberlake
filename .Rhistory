library(plyr) # Data manipulation
library(tidyverse) # Data manipulation
library(mctoolsr) # Microbial analyses
library(RColorBrewer) # Colors
library(vegan) # Multivariate analyses
library(indicspecies) # Indicator species
library(car) # Stats
library(FSA) # SE
library(magrittr) # Set names
library(PMCMRplus) # Stats
library(readxl) # Excel
library(writexl) # Excel
library(plotly) # Interactive plots
library(ggmap) # Maps
library(ggsn) # Maps
library(multcomp) # Tukey HSD and significance letters
library(emmeans) # Tukey HSD and significance letters
library(scales) # View colors
library(cowplot) # Multipanels
library(qvalue) # q values for indicator species
library(reshape2) # melt
library(gridExtra) # graphs
library(grid) # graphs
library(cowplot) # graphs
library(ggpubr) # graphs
library(ggExtra) # graphs
library(ggh4x) # graphs
library(dendextend) # graphs
library(corrplot) # correlation plots
library(pheatmap) # heatmaps
library(zCompositions) # CLR
library(compositions) # Aitchison
library(mobr) # rarefaction curves
library(plotly) # interactive graphs
library(pairwiseAdonis) # pairwise permanova
library(patchwork) # insets
# Functions
find_hull <- function(df) df[chull(df$Axis01, df$Axis02),]
`%notin%` <- Negate(`%in%`)
# Guild subsetting module from other repo
source("~/Documents/GitHub/SF_microbe_methane/modules/3_OTU_subsetting_modules_v.0.4_strip.r")
# Correlation functions from other repo
source("~/Documents/GitHub/EastCoast/code/meth_corr_by_taxonomy.R")
source("~/Documents/GitHub/EastCoast/code/meth_corr_by_bgc.R")
# Plotting functions from other repo
source("~/Documents/GitHub/EastCoast/code/cliffplot_taxa_bars.R")
source("~/Documents/GitHub/Extremophilic_Fungi/plot_multipatt.R")
# Effect size from Jack Darcy
source("~/Documents/GitHub/Timberlake/code/effectSize.R")
# Repository path
setwd("~/Documents/GitHub/Timberlake/")
# Wyatt Hartman's guild color palette
# Note that MeOB don't exist in this dataset, so removed
# But ANME do exist in this dataset, so add
# Extra methanogen guilds added so colors added too
Guild_cols <- read.table("~/Documents/GitHub/SF_microbe_methane/data/colors/Guild_color_palette.txt",
sep='\t') %>%
dplyr::select(Guild, G_index, color) %>%
set_names(c("Guild", "Index", "color")) %>%
mutate(Index = rev(Index)) %>%
add_row(Guild = "ANME", Index = 10, color = "#836FFF") %>%
add_row(Guild = "CH4_me", Index = 16, color = "#FDC086") %>%
add_row(Guild = "CH4_mix", Index = 17, color = "#FFFF99") %>%
filter(Guild != "MeOB") %>%
filter(Guild != "Anamx") %>%
arrange(Index)
nc <- readRDS("data/nc.rds")
# Add C, N, C:N data (was received later)
nc_cn <- read_excel("~/Documents/GitHub/EastCoast/data/Copy of CHN data.xls", sheet = 2) %>%
slice(12:91) %>%
dplyr::select(Name, `%N`, `%C`, `C:N`) %>%
mutate(Name = gsub("bottom", "bot", Name)) %>%
separate(Name, into = c("ID", "Depth"), sep = " ", remove = F) %>%
mutate(Treatment = substr(ID, start = 1, stop = 1),
Hydro = substr(ID, start = 2, stop = 2),
Replicate = substr(ID, start = 3, stop = 3)) %>%
filter(Hydro == "F") %>%
mutate(Treatment = recode_factor(Treatment,
"A" = "Control",
"B" = "ASW",
"C" = "ASW_noS",
"D" = "SO4")) %>%
mutate(Treatment = factor(Treatment,
levels = c("ASW", "ASW_noS", "Control", "SO4"))) %>%
arrange(desc(Depth), Treatment) %>%
filter(Name %notin% c("BF1 top", "BF2 top", "AF1 top", "DF2 top", "BF2 bot", "CF1 bot", "AF2 bot"))
rownames(nc$map_loaded)[11:43]
nc$map_loaded$sed_per_C[11:43] <- nc_cn$`%C`
nc$map_loaded$sed_per_N[11:43] <- nc_cn$`%N`
nc$map_loaded$sed_CN[11:43] <- nc_cn$`C:N`
# After looking at microbial alpha and beta diversity it is clear SO4 5B D1 and D2 are switched!
# Fix
for (i in 1:nrow(nc$map_loaded)) {
if (nc$map_loaded$sampleID[i] == "TL_inc_d1_SO4_5B") {
nc$map_loaded$Depth[i] <- "10-15 cm"
nc$map_loaded$sampleID_clean[i] <- "+SO4_5B_D2"
}
}
for (i in 1:nrow(nc$map_loaded)) {
if (nc$map_loaded$sampleID[i] == "TL_inc_d2_SO4_5B") {
nc$map_loaded$Depth[i] <- "0-5 cm"
nc$map_loaded$sampleID_clean[i] <- "+SO4_5B_D1"
}
}
# Add +SO4 core 5 data to 5A and 5B
new_dat <- read_excel("data/Soil pH-Jessie.xls", sheet = 3, na = "NA")
# rows 25, 26, 42, 43
# columns 10 - 24
nc$map_loaded[25, 10:24] <- new_dat[1, 2:16]
nc$map_loaded[26, 10:24] <- new_dat[2, 2:16]
nc$map_loaded[42, 10:24] <- new_dat[3, 2:16]
nc$map_loaded[43, 10:24] <- new_dat[4, 2:16]
# To recap, C, N, CN, pH have 5A D1 D2, 5B D1 D2. Porewater just has 5 D1 D2. GHG just 5
# Add two new columns for SO4 and ASW (following N + P type experiments)
# There's SO4, ASW, and both (just like N, P, NP)
nc$map_loaded$SO4 <- recode_factor(nc$map_loaded$Treatment,
"+SO4" = "Sulfate",
"+ASW" = "SaltSulfate")
nc$map_loaded$SO4 <- grepl(x = nc$map_loaded$SO4, pattern = "Sulfate")
nc$map_loaded$ASW <- recode_factor(nc$map_loaded$Treatment,
"+ASW-SO4" = "Salt",
"+ASW" = "SaltSulfate")
nc$map_loaded$ASW <- grepl(x = nc$map_loaded$ASW, pattern = "Salt")
#### 3. Alpha ####
# Get descriptive info
field <- filter_data(nc, "Treatment", keep_vals = "Field")
min(field$map_loaded$rich)
max(field$map_loaded$rich)
lab <- filter_data(nc, "Treatment", filter_vals = "Field")
min(lab$map_loaded$rich)
max(lab$map_loaded$rich)
nc$map_loaded$Treatment2 <- recode_factor(nc$map_loaded$Treatment,
"Control" = "Lab",
"+SO4" = "Lab",
"+ASW-SO4" = "Lab",
"+ASW" = "Lab")
# Test just lab with 3-way anova
# Make pie chart with effect size
m1 <- aov(rich ~  Depth + SO4 + ASW, data = lab$map_loaded)
summary(m1)
anova(m1)
Anova(m1, type = "II") # Depth and ASW
eta_sq_m1 <- eta_sq(m1) %>%
as.data.frame() %>%
rownames_to_column(var = "group") %>%
set_names(c("group", "value")) %>%
mutate(group = c("Depth***", "SO4", "ASW***", "Residuals")) %>%
arrange(desc(group)) %>%
mutate(ypos = cumsum(value) - 0.5*value)
View(eta_sq_m1)
Anova(m1, type = "II") # Depth and ASW
m2 <- aov(shannon ~  Depth + SO4 + ASW, data = lab$map_loaded)
summary(m2)
anova(m2)
Anova(m2, type = "II") # Depth and ASW
eta_sq_m2 <- eta_sq(m2) %>%
as.data.frame() %>%
rownames_to_column(var = "group") %>%
set_names(c("group", "value")) %>%
mutate(group = c("Depth**", "SO4", "ASW**", "Residuals")) %>%
arrange(desc(group)) %>%
mutate(ypos = cumsum(value) - 0.5*value)
View(eta_sq_m2)
View(eta_sq_m2)
#### 4. Beta ####
# Get env. vars with no NA
env_nc <- nc$map_loaded %>%
dplyr::select(10:27)
env_nona_nc <- na.omit(env_nc)
nrow(env_nona_nc) # n = 25
# Corrplot
env_nona <- env_nona_nc %>%
dplyr::select(-Cl_mgL)
C <- cor(env_nona)
corrplot(C, method = "number", type = "lower",
tl.cex = 0.5, tl.col = "black", number.cex = 0.5)
meth_corr_by_bgc(env_nona = env_nona)
# Boxplots by treatment - Fluxes
# Remove Field
nc_lab <- filter_data(nc,
"Treatment",
filter_vals = "Field")
flux_data <- nc_lab$map_loaded %>%
group_by(CH4_ug_m2_h) %>%
slice_head(n = 1)
leveneTest(flux_data$CH4_ug_m2_h ~ flux_data$Treatment) # Homogeneous
m <- aov(CH4_ug_m2_h ~ Treatment, data = flux_data)
shapiro.test(m$residuals) # Normal
hist(m$residuals)
summary(m)
TukeyHSD(m)
t1 <- emmeans(object = m, specs = "Treatment") %>%
cld(object = ., adjust = "Tukey", Letters = letters, alpha = 0.05) %>%
mutate(name = "CH4_ug_m2_h",
y = max(flux_data$CH4_ug_m2_h)+(max(flux_data$CH4_ug_m2_h)-min(flux_data$CH4_ug_m2_h)) + 1000000)
g1 <- ggplot(flux_data, aes(Treatment, CH4_ug_m2_h)) +
geom_boxplot(aes(colour = Treatment), outlier.shape = NA) +
geom_jitter(size = 4, width = 0.1, aes(colour = Treatment)) +
geom_text(data = t1, aes(Treatment, y, label = str_trim(.group)),
size = 4, color = "black") +
labs(x = "Treatment",
y = expression(""*CH[4]*" flux (Âµg/"*m^2*"/h)")) +
scale_y_continuous(trans = 'log10',
breaks = c(0.01, 0.1, 1, 10, 100, 1000, 10000, 100000),
labels = c(0.01, 0.1, 1, 10, 100, 1000, 10000, "100000")) +
scale_colour_manual(values = viridis_pal()(5)[2:5]) +
guides(colour = "none") +
theme_bw() +
theme(axis.title.y = element_text(size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_blank())
g1
leveneTest(flux_data$CO2_ug_m2_h ~ flux_data$Treatment) # Not Homogeneous
m <- aov(CO2_ug_m2_h ~ Treatment, data = flux_data)
shapiro.test(m$residuals) # Almost Normal
hist(m$residuals)
summary(m)
# Make pie charts with effect size
m1 <- aov(CH4_ug_m2_h ~ SO4 + ASW, data = flux_data)
summary(m1)
anova(m1)
Anova(m1, type = "II") # ASW
eta_sq_m1 <- eta_sq(m1) %>%
as.data.frame() %>%
rownames_to_column(var = "group") %>%
set_names(c("group", "value")) %>%
mutate(group = c("SO4", "ASW***", "Residuals")) %>%
arrange(desc(group)) %>%
mutate(ypos = cumsum(value) - 0.5*value)
View(eta_sq_m1)
m2 <- aov(CO2_ug_m2_h ~ SO4 + ASW, data = flux_data)
summary(m2)
anova(m2)
Anova(m2, type = "II") # ASW
eta_sq_m2 <- eta_sq(m2) %>%
as.data.frame() %>%
rownames_to_column(var = "group") %>%
set_names(c("group", "value")) %>%
mutate(group = c("SO4", "ASW*", "Residuals")) %>%
arrange(desc(group)) %>%
mutate(ypos = cumsum(value) - 0.5*value)
View(eta_sq_m2)
m3 <- aov(N2O_ug_m2_h ~ SO4 + ASW, data = flux_data)
summary(m3)
anova(m3)
Anova(m3, type = "II") # ASW
eta_sq_m3 <- eta_sq(m3) %>%
as.data.frame() %>%
rownames_to_column(var = "group") %>%
set_names(c("group", "value")) %>%
mutate(group = c("SO4", "ASW*", "Residuals")) %>%
arrange(desc(group)) %>%
mutate(ypos = cumsum(value) - 0.5*value)
View(eta_sq_m3)
# Prepare data. Only need to do once. Then skip to start here.
# Read in combined dataset (with other samples)
input_filt <- readRDS("data/input_filt_comb_wBGC.rds")
# Get only Timberlake samples
input_filt_nc <- filter_data(input_filt,
filter_cat = "Estuary",
keep_vals = "Alligator")
# Remove extra samples
# Keep 5A and 5B - careful about assigning env data though, or don't assign env data
input_filt_nc <- filter_data(input_filt_nc,
filter_cat = "sampleID",
filter_vals = c("TL_nw_d1_DI_ctrl_AF1",
"TL_nw_d1_DI_ctrl_AF3",
"TL_nw_d1_DI_ctrl_AF4",
"TL_nw_d1_ASW_noS_BF3",
"TL_nw_d1_ASW_noS_BF4",
"TL_nw_d1_ASW_noS_BF5"#,
#"TL_inc_d1_SO4_5A",
#"TL_inc_d1_SO4_5B",
#"TL_inc_d2_SO4_5A",
#"TL_inc_d2_SO4_5B"
))
# Remove unneeded columns from metadata and format factors
input_filt_nc$map_loaded <- input_filt_nc$map_loaded %>%
dplyr::select(-Site, -Estuary, -Info, -Conductivity_uS_cm, -CH4_pw_air_ppmv, -NEE_mgC_m2_m,
-GEP_mgC_m2_m, -PAR_uE_m2_s, -CH4_pot_umol_gdw_h, -CO2_pot_umol_gdw_h,
-Fe_mgL, -Acetate_mgL, -TotalVFA_uM, -SR_umol_cm3_d, -AMG_umol_cm3_d,
-c(36:67)) %>%
rename(Treatment = Detail,
Salinity = Salinity_ppt_all) %>%
mutate(Treatment = as.factor(Treatment),
Depth = as.factor(Depth)) %>%
mutate(Treatment = recode_factor(Treatment, "Field Reference" = "Field", "DI_ctrl" = "Control",
"5ppt ASW" = "+ASW", "SW_noSO4" = "+ASW-SO4", "SO4 amended" = "+SO4"),
Depth = recode_factor(Depth, "0.025" = "0-5 cm", "0.125" = "10-15 cm")) %>%
mutate(Treatment = factor(Treatment,
levels = c("Field", "Control", "+SO4", "+ASW-SO4", "+ASW")),
TrtDepth = paste(Treatment, Depth, sep = ""))
# Remove singletons and doubletons
singdoub <- data.frame("count" = rowSums(input_filt_nc$data_loaded)) %>%
filter(count < 3) %>%
mutate(ASV = rownames(.))
input_filt_nc <- filter_taxa_from_input(input_filt_nc,
taxa_IDs_to_remove = singdoub$ASV)
#### _Aitch ####
# Use non-rarefied data, do CLR transformation, Aitchison, PCA
sum(rownames(nc$map_loaded) != rownames(input_filt_nc$map_loaded))
input_filt_nc$map_loaded <- nc$map_loaded
dim(input_filt_nc$data_loaded)
# CLT transformation
otu_czm <- cmultRepl(t((input_filt_nc$data_loaded)), label = 0, method = "CZM")
otu_clr <- clr(otu_czm)
aclr <- compositions::dist(otu_clr)
set.seed(1150)
# Stats and pie for just lab
lab_raw <- filter_data(input_filt_nc,
filter_cat = "Treatment",
filter_vals = "Field")
otu_czm_lab <- cmultRepl(t((lab_raw$data_loaded)), label = 0, method = "CZM")
otu_clr_lab <- clr(otu_czm_lab)
aclr_lab <- compositions::dist(otu_clr_lab)
set.seed(1150)
m3 <- adonis2(aclr_lab ~ lab_raw$map_loaded$Depth + lab_raw$map_loaded$SO4 + lab_raw$map_loaded$ASW)
eta_sq_m3 <- eta_sq_adonis(m3) %>%
as.data.frame() %>%
rownames_to_column(var = "group") %>%
filter(group != "Total") %>%
set_names(c("group", "value")) %>%
mutate(group = c("Depth***", "SO4", "ASW***", "Residuals")) %>%
arrange(desc(group)) %>%
mutate(ypos = cumsum(value) - 0.5*value)
m3
View(eta_sq_m3)
#### _Aitch ####
# Get env. vars with no NA
env_nc2 <- input_filt_nc$map_loaded %>%
dplyr::select(10:27)
env_nona_nc2 <- na.omit(env_nc2)
nrow(env_nona_nc2) # n = 25
# RDA
comm_nona_nc <- as.data.frame(t(input_filt_nc$data_loaded)) %>%
filter(rownames(.) %in% rownames(env_nona_nc2))
mod0 <- rda(comm_nona_nc ~ 1, env_nona_nc2)  # Model with intercept only
mod1 <- rda(comm_nona_nc ~ ., env_nona_nc2)  # Model with all explanatory variables
mod <- ordistep(mod0, scope = formula(mod1))
mod
mod$anova # DIN, Br
