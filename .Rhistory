library(plyr) # Data manipulation
library(tidyverse) # Data manipulation
library(mctoolsr) # Microbial analyses
library(RColorBrewer) # Colors
library(vegan) # Multivariate analyses
library(indicspecies) # Indicator species
library(car) # Stats
library(FSA) # SE
library(magrittr) # Set names
library(PMCMRplus) # Stats
library(readxl) # Excel
library(writexl) # Excel
library(plotly) # Interactive plots
library(ggmap) # Maps
library(ggsn) # Maps
library(multcomp) # Tukey HSD and significance letters
library(emmeans) # Tukey HSD and significance letters
library(scales) # View colors
library(cowplot) # Multipanels
library(qvalue) # q values for indicator species
library(reshape2) # melt
library(gridExtra) # graphs
library(grid) # graphs
library(cowplot) # graphs
library(ggpubr) # graphs
library(ggExtra) # graphs
library(ggh4x) # graphs
library(dendextend) # graphs
library(corrplot) # correlation plots
library(pheatmap) # heatmaps
library(zCompositions) # CLR
library(compositions) # Aitchison
library(mobr) # rarefaction curves
library(plotly) # interactive graphs
library(pairwiseAdonis) # pairwise permanova
library(patchwork) # insets
# Repset is in EastCoast folder, then filter to these samples.
# Also make sample-sequence map file
library(microseq)
# Repository path
setwd("~/Documents/GitHub/Timberlake/")
# Filter out NCBI flagged sequences
flagged <- read.csv("data/NCBI_filter.csv")
f <- readFasta("data/repset_used.fasta") %>%
filter(Header %notin% flagged$ASV_ID)
# Functions
find_hull <- function(df) df[chull(df$Axis01, df$Axis02),]
`%notin%` <- Negate(`%in%`)
f <- readFasta("data/repset_used.fasta") %>%
filter(Header %notin% flagged$ASV_ID)
microseq::writeFasta(f, "data/repset_used_filtered.fasta")
f <- readFasta("data/repset_used.fasta")
sum(f$Header %in% flagged$ASV_ID)
f <- readFasta("data/repset_used.fasta") %>%
filter(Header %notin% flagged$ASV_ID)
sum(f$Header %in% flagged$ASV_ID)
info_cat <- read_tsv("data/biosample_assignment.tsv") %>%
filter(Sequence_ID %notin% flagged$ASV_ID)
info_first <- read_tsv("data/biosample_assignment_first.tsv") %>%
filter(Sequence_ID %notin% flagged$ASV_ID)
write_tsv(info_cat, file = "data/biosample_assignment_filt.tsv")
write_tsv(info_first, file = "data/biosample_assignment_first_filt.tsv")
