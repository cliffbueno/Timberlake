library(phyloseq)
library(plyr)
library(tidyverse)
library(RColorBrewer)
library(stringr)
library(scales)
library(cowplot)
library(plotly)
suppressMessages(library(vegan))
suppressMessages(library(DESeq2))
suppressMessages(library(gplots))
library(pheatmap)
library(reshape2)
library(readxl)
setwd("~/Documents/GitHub/Timberlake/")
# Functions
find_hull <- function(df) df[chull(df$Axis01, df$Axis02),]
find_hullj <- function(df) df[chull(df$Axis01j, df$Axis02j),]
#### 10. KEGG Module ####
mod <- read.delim("data/TL_KEGG_mod/UI_data_output.txt") %>%
mutate(FeatureName = paste(Feature, FeatureName, sep = " ")) %>%
column_to_rownames(var = "FeatureName") %>%
select(9:31) %>%
set_names(substring(names(.), first = 1, last = 11)) %>%
set_names(gsub("X", "", names(.))) %>%
select(as.character(IMG_meta$taxon_oid)) %>%
t() %>%
as.data.frame()
#### 8. COGs ####
# Import
IMG_meta <- read.delim("data/IMGmetadata.txt") %>%
separate(`Genome.Name...Sample.Name`, into = c("Name", "sampleID"),
sep = " - ", remove = F) %>%
mutate(sampleID = gsub("SO4_5", "SO4_5B", sampleID)) %>%
mutate(sampleID = gsub("SO4_4", "SO4_5A", sampleID)) %>%
mutate(sampleID = gsub("SO4_3", "SO4_4", sampleID)) %>%
mutate(sampleID = gsub("SO4_2", "SO4_3", sampleID)) %>%
mutate(sampleID = gsub("SO4_1", "SO4_2", sampleID)) %>%
separate(sampleID, into = c("Treatment", "Replicate"), sep = "_", remove = F) %>%
filter(Treatment != "SourceSoil") %>%
mutate(Treatment = factor(Treatment,
levels = c("Control", "SO4", "ASW-S", "ASW"))) %>%
mutate(Treatment = recode_factor(Treatment, "ASW-S" = "ASW-SO4")) %>%
mutate(Treatment = factor(Treatment,
levels = c("Control", "SO4", "ASW-SO4", "ASW"))) %>%
arrange(Treatment, Replicate)
# Import and pre-process files
## KO table import, filter out field samples
TL_KO_raw <- read.csv("data/Timberlake_MG_KO_data.csv", header=TRUE) %>%
select(1:19, Fxn)
# Check pmoABC trends (this was an issue in SF Salinity Gradient)
checkPMO <- TL_KO_raw %>%
select(-Fxn) %>%
column_to_rownames(var = "KO") %>%
t() %>%
as.data.frame() %>%
select(K10944, K10945, K10946)
ggplot(checkPMO, aes(K10944, K10945)) +
geom_abline(intercept = 0, slope = 1, linetype = "dotted") +
geom_point() +
geom_smooth(method = "lm", alpha = 0.2) +
labs(x = "pmoA", y = "pmoB") +
theme_classic()
ggplot(checkPMO, aes(K10944, K10946)) +
geom_abline(intercept = 0, slope = 1, linetype = "dotted") +
geom_point() +
geom_smooth(method = "lm", alpha = 0.2) +
labs(x = "pmoA", y = "pmoC") +
theme_classic()
ggplot(checkPMO, aes(K10945, K10946)) +
geom_abline(intercept = 0, slope = 1, linetype = "dotted") +
geom_point() +
geom_smooth(method = "lm", alpha = 0.2) +
labs(x = "pmoB", y = "pmoC") +
theme_classic()
hist(checkPMO$K10944)
hist(checkPMO$K10945)
hist(checkPMO$K10946)
checkPMO_long <- melt(checkPMO, measure.vars = c("K10944", "K10945", "K10946"))
ggplot(checkPMO_long, aes(x = value, colour = variable)) +
geom_density() +
labs(x = "Count", y = "Density", colour = "KO") +
theme_classic()
# df of KO gene fxns
TL_KO_fxn <- TL_KO_raw %>%
select(KO, Fxn) %>%
column_to_rownames(var = "KO")
# KO fxns as Phyloseq object
suppressWarnings(KOTaxTable <- tax_table(TL_KO_fxn)) # Fxn as PHYLOSEQ tax table
colnames(KOTaxTable) <- colnames(TL_KO_fxn) # Add back colnames
row.names(KOTaxTable) <- row.names(TL_KO_fxn) # Add back rownames
# Gene Ontology and fxn Colors import
BGC_ont <- read.csv("data/Ontology_KO_CNPSch4_Fm_whh.csv", header=TRUE) # Ontology
BGC_colors <- read.csv("data/Ontol_KO_L2_Color_KEY_whh.csv") # Colors
BGC_ont_col <- merge(BGC_ont, BGC_colors, by = "L2", all.x =TRUE) %>% # Merge
arrange(Index.x) %>% # Sort for readability
filter(L2 != "Fermentation") # Drop fermentation
# Only CNPSch4 genes from Ontology
bgc_KOu <- unique(data.frame(KO = BGC_ont$KO)) # only KOs from BGC_ont
TL_bgc_KO <- merge(bgc_KOu, TL_KO_raw) # Merge with TL KO
# Sample Mapping import
map_MG_only <- read.table("data/Timberlake_sample_map_both.txt", sep="\t", header = T) %>%
drop_na(MG_name) %>% # drop NA in MG samps
arrange(itag_meta_order2) %>% # sort by index (itag intentional)
select(MG_name, Treat, Depth) %>% # keep only relevant cols
column_to_rownames(var = "MG_name") %>% # Sample as row names, # Drop sample col
filter(Treat != "SourceSoil") # Drop field samples, incubations only
## Phyloseq to DESeq2
# Prep KO count data for OTU table
No_fxn <- data.frame(unique(TL_KO_raw)) %>% # DF for KOin, unique used to drop redund.
column_to_rownames(var = "KO") %>% # Make rownames KO numbers, Drop KO column
select(-Fxn) %>% # Drop Fxn
as.matrix()
# Make PHYLOSEQ KO -> "OTU Table"
class(No_fxn) <- "numeric" # Make numeric for phyloseq
KO_otu <- otu_table(No_fxn, taxa_are_rows = TRUE, errorIfNULL = TRUE) # Make OTU table phyloseq object
# Make Phyloseq sample data
Map <- sample_data(map_MG_only) # map
### Make combined Phyloseq OBJECT
physeq = phyloseq(KO_otu, Map, KOTaxTable)
# phyloseq patch before DESeq
sample_data(physeq)$Treat <- relevel(as.factor(get_variable(physeq, "Treat")),
ref="Control")
# Export phyloseq to DESeq
KO_phy2des <- phyloseq_to_deseq2(physeq, ~ Treat)
## DESeq2 for Diff abund
# Wald test
KO_phy2des <- DESeq(KO_phy2des,
test = "Wald",
fitType = "parametric") # Test
# Inspect DESeq fmt data set, includes estimated dispersions
KO_phy2des
# Overall results  -- why nothing sig when contrasts are?
res <- results(KO_phy2des)
resultsNames(KO_phy2des)
summary(res)
plotMA(res)
# Likelihood ratio test, "ANOVA - like" for multiple factors
# Note here some are sig again, unlike above Wald test
lrt <- DESeq(KO_phy2des,
test = "LRT",
reduced = ~1)
res_LRT <- results(lrt)
res_LRT
plotMA(res_LRT)
#### 2. DESeq2 Linear contrasts ####
### Function for linear contrasts with p > filter, FC cutoff
# Function for linear contrasts, results cutoff and merge with Ontology
DSq_cntrstF = function(Treat_col, Treat1, Treat2) {                      # Treat_col: column with treatment data
alpha = 0.05                                                         # Treat1: for increase compared with Ref
FC = 1                                                               # Treat2: Ref for comparison
T1_T2_De <- results(KO_phy2des,
contrast = c(Treat_col, Treat1, Treat2),
independentFiltering = FALSE) # DESeq2 results
T1_T2_DeS <- T1_T2_De[which(T1_T2_De$padj < alpha), ]                # filter by alpha
T1_T2_DeSQ <- data.frame(T1_T2_DeS)                                   # make df
T1_T2_DeSQ$KO <- row.names(T1_T2_DeSQ)                                # add KO as rownames
# Merge with CNP ontology, filter FC > 1
T1_T2_DeSQ <- merge(T1_T2_DeSQ, BGC_ont_col, by ='KO')               # merge w Ontology
T1_T2_DeSQ_FC1 <- T1_T2_DeSQ[abs(T1_T2_DeSQ$log2FoldChange) > FC,]   # filter FC > 1
return(T1_T2_DeSQ_FC1)
}
# Test contrasts fxn:
ASW_Ctrl_DeSQ_FC <- DSq_cntrstF("Treat", "ASW", "Control")
# Create ALL Contrasts results sets
ASW_Ctrl_FC <- DSq_cntrstF("Treat", "ASW", "Control")
ASW0S_Ctrl_FC <- DSq_cntrstF("Treat", "ASW_noS", "Control")
SO4_Ctrl_FC <- DSq_cntrstF("Treat", "SO4", "Control")
ASW_SO4_FC <- DSq_cntrstF("Treat", "ASW", "SO4")
ASW_ASW0S_FC <- DSq_cntrstF("Treat","ASW", "ASW_noS")
ASW0S_SO4_FC <- DSq_cntrstF("Treat","ASW_noS","SO4")
### Collect significnant KOs, all treats
# gather KO lists
ASW_Ctrl_KO <- data.frame(KO = ASW_Ctrl_FC$KO)
ASW0S_Ctrl_KO <- data.frame(KO = ASW0S_Ctrl_FC$KO)
SO4_Ctrl_KO <- data.frame(KO = SO4_Ctrl_FC$KO)
ASW_SO4_KO <- data.frame(KO = ASW_SO4_FC$KO)
ASW_ASW0S_KO <- data.frame(KO = ASW_ASW0S_FC$KO)
ASW0S_SO4_KO <- data.frame(KO = ASW0S_SO4_FC$KO)
# Combine lists, make unique
Resp_KO <- (rbind(ASW_Ctrl_KO, ASW0S_Ctrl_KO, SO4_Ctrl_KO, ASW_SO4_KO, ASW_ASW0S_KO, ASW0S_SO4_KO))
Resp_KOu <- unique(Resp_KO)
row.names(Resp_KOu) <- Resp_KOu$KO
## Get DESeq2 variance stablized data and Counts
# From updated phyloseq to DESeq2 tutorial at https://github/Joey711/phyloseq/issues/283
# Adding size factors and dispersion estimates before variance stabilization, as instructed
KO_phy2des_vs <- estimateSizeFactors(KO_phy2des)
KO_phy2des_vs <- estimateDispersions(KO_phy2des)
KO_phy2des_VST <- getVarianceStabilizedData(KO_phy2des)
KO_table_VST <- data.frame(KO_phy2des_VST)    # shorten name
KO_table_VST$KO <- row.names(KO_table_VST)    # index rows
# Check VST df
head(KO_table_VST)
## Replace VST data with COUNTS
KO_vs_counts <- counts(KO_phy2des_vs, normalized = TRUE)     # get counts
KO_table_VST <- data.frame(KO_vs_counts)                   # make df, shorten name
head(KO_table_VST)
colSums(KO_table_VST[,1:ncol(KO_table_VST)-1])
# Scale OTU VST table counts to CPM (Counts per million)
sampTots <- colSums(KO_table_VST)                          # Get sample totals   #[,1:ncol(OTU_table_VST)-1])
KO_VST_CPM <- sweep(KO_table_VST*1000000, 2, sampTots, '/')   # Sweep matrix by:[div. by samp total * 1e+06]
KO_VST_CPM$KO <- row.names(KO_VST_CPM)                   # Add KO as column for later merges
#### 11. Methanogenesis ####
# Make separate heatmaps for each pathway
# Some overlapping genes, that's okay. Can repeat them if present in multiple pathways
# Transformed KO table DESeq + CPM + Log10 + z-score!
KO_VST_CPM[KO_VST_CPM == 0] <- 0.5 # Replace 0 values with psuedo counts for LOG transform
KO_VST_CPM$KO <- NULL
KO_VST_CPM_Log_Z <- data.frame(t(scale(t(log10(KO_VST_CPM)),
center = TRUE,
scale = TRUE))) # z-scores, log10
ko_tab <- KO_VST_CPM_Log_Z %>%
select(-ASW_1, ASW_1) %>%
select(-ASW_2, ASW_2) %>%
select(-ASW_3, ASW_3) %>%
select(-ASW_4, ASW_4) %>%
select(-ASW_5, ASW_5) %>%
rownames_to_column(var = "KO")
names(ko_tab)[7:11] <- c("SO4_2", "SO4_3", "SO4_4", "SO4_5A", "SO4_5B")
# Read in pathway KOs
mko_ace <- read_excel("data/MethanogenesisKOs.xlsx", sheet = 1) %>%
mutate(Name = ifelse(is.na(Name), "", Name)) %>%
mutate(KO_def = paste(KEGG_KO, Name, sep = " ")) %>%
mutate_if(is.character, as.factor) %>%
arrange(Pathway_Order, Reaction_Order) %>%
select(-ModelSeed_ID)
mko_co2 <- read_excel("data/MethanogenesisKOs.xlsx", sheet = 2) %>%
mutate(Name = ifelse(is.na(Name), "", Name)) %>%
mutate(KO_def = paste(KEGG_KO, Name, sep = " ")) %>%
mutate_if(is.character, as.factor) %>%
arrange(Pathway_Order, Reaction_Order) %>%
select(-ModelSeed_ID)
mko_metD <- read_excel("data/MethanogenesisKOs.xlsx", sheet = 3) %>%
mutate(Name = ifelse(is.na(Name), "", Name)) %>%
mutate(KO_def = paste(KEGG_KO, Name, sep = " ")) %>%
mutate_if(is.character, as.factor) %>%
arrange(Pathway_Order, Reaction_Order) %>%
select(-ModelSeed_ID)
mko_metR <- read_excel("data/MethanogenesisKOs.xlsx", sheet = 4) %>%
mutate(Name = ifelse(is.na(Name), "", Name)) %>%
mutate(KO_def = paste(KEGG_KO, Name, sep = " ")) %>%
mutate_if(is.character, as.factor) %>%
arrange(Pathway_Order, Reaction_Order) %>%
select(-ModelSeed_ID)
# Heatmap data and metadata for each
mko_ace_mat <- left_join(mko_ace, ko_tab, by = c("KEGG_KO" = "KO")) %>%
select(7:25) %>%
column_to_rownames(var = "KO_def") %>%
as.matrix()
mko_ace_meta <- left_join(mko_ace, ko_tab, by = c("KEGG_KO" = "KO")) %>%
select(1:7)
mko_co2_mat <- left_join(mko_co2, ko_tab, by = c("KEGG_KO" = "KO")) %>%
select(7:25) %>%
column_to_rownames(var = "KO_def") %>%
as.matrix()
mko_co2_meta <- left_join(mko_co2, ko_tab, by = c("KEGG_KO" = "KO")) %>%
select(1:7)
mko_metD_mat <- left_join(mko_metD, ko_tab, by = c("KEGG_KO" = "KO")) %>%
select(7:25) %>%
column_to_rownames(var = "KO_def") %>%
as.matrix()
mko_metD_meta <- left_join(mko_metD, ko_tab, by = c("KEGG_KO" = "KO")) %>%
select(1:7)
mko_metR_mat <- left_join(mko_metR, ko_tab, by = c("KEGG_KO" = "KO")) %>%
select(11:29) %>%
column_to_rownames(var = "KO_def") %>%
as.matrix()
mko_metR_meta <- left_join(mko_metR, ko_tab, by = c("KEGG_KO" = "KO")) %>%
select(1:11)
## Heatmaps
# Acetate
ann_cols <- data.frame(row.names = colnames(mko_ace_mat),
"Treatment" = c(rep("Control", 5),
rep("SO4", 5),
rep("ASW-SO4", 3),
rep("ASW", 5)))
ann_rows <- data.frame(row.names = rownames(mko_ace_mat),
Pathway = mko_ace_meta$Pathway_Specific,
Process = mko_ace_meta$Pathway_General)
ann_colors <- list(Pathway = c(`Acetate cleavage` = "forestgreen",
`Wood-Ljungdahl - CO2 out` = "orange",
`Na out` = "purple",
"Methyl-CoM reduction" = "#21908CFF",
Methanophenazine = brewer.pal(9, "YlOrRd")[1],
Ferredoxin = brewer.pal(9, "YlOrRd")[2],
Hydrogenase = brewer.pal(9, "YlOrRd")[3]),
Process = c("Methyl-CoM formation" = "#440154FF",
"Methanogenesis" = "#21908CFF",
"CoB - CoM regeneration" = "#FDE725FF"),
Treatment = c(Control = "#3B528BFF",
SO4 = "#21908CFF",
`ASW-SO4` = "#5DC863FF",
ASW = "#FDE725FF"))
# H2/CO2
ann_cols <- data.frame(row.names = colnames(mko_co2_mat),
"Treatment" = c(rep("Control", 5),
rep("SO4", 5),
rep("ASW-SO4", 3),
rep("ASW", 5)))
ann_rows <- data.frame(row.names = rownames(mko_co2_mat),
Pathway = mko_co2_meta$Pathway_Specific,
Process = mko_co2_meta$Pathway_General)
ann_colors <- list(Pathway = c(`Wood-Ljungdahl - CO2 in` = "orange",
`Na out` = "purple",
"Methyl-CoM reduction" = "#21908CFF",
F420 = brewer.pal(9, "YlOrRd")[1],
Ferredoxin = brewer.pal(9, "YlOrRd")[2],
"Ferredoxin-F420-H2" = brewer.pal(9, "YlOrRd")[3],
H2 = brewer.pal(9, "YlOrRd")[4],
`Formate-F420` = brewer.pal(9, "YlOrRd")[5]),
Process = c("Methyl-CoM formation" = "#440154FF",
"Methanogenesis" = "#21908CFF",
"CoB - CoM regeneration" = "#FDE725FF"),
Treatment = c(Control = "#3B528BFF",
SO4 = "#21908CFF",
`ASW-SO4` = "#5DC863FF",
ASW = "#FDE725FF"))
pheatmap(mko_co2_mat,
legend = T,
legend_breaks = c(-3, -2, -1, 0, 1, 2, 3, max(mko_co2_mat, na.rm = T)),
legend_labels = c("-3","-2","-1","0","1","2","3","Abund.\n"),
main = "Hydrogenotrophic Methanogenesis",
border_color = NA,
scale = "none",
angle_col = 315,
fontsize = 8,
annotation_col = ann_cols,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_col = c(5, 10, 13),
filename = "InitialFigs/KO_heatmap_h2_co2.png",
width = 7,
height = 7)
dev.off()
dev.set(dev.next())
dev.set(dev.next())
# Methyl dismutation
ann_cols <- data.frame(row.names = colnames(mko_metD_mat),
"Treatment" = c(rep("Control", 5),
rep("SO4", 5),
rep("ASW-SO4", 3),
rep("ASW", 5)))
ann_rows <- data.frame(row.names = rownames(mko_metD_mat),
Pathway = mko_metD_meta$Pathway_Specific,
Process = mko_metD_meta$Pathway_General)
ann_colors <- list(Pathway = c(Trimethylamine = brewer.pal(7, "Purples")[1],
Dimethylamine = brewer.pal(7, "Purples")[2],
Methylamine = brewer.pal(7, "Purples")[3],
Methylamines = brewer.pal(7, "Purples")[4],
Methanol = brewer.pal(7, "Purples")[5],
Betaine = brewer.pal(7, "Purples")[6],
`DMS/MeSH/MMPA` = brewer.pal(7, "Purples")[7],
`Wood-Ljungdahl - CO2 out` = "orange",
`Na in` = "purple",
"Methyl-CoM reduction" = "#21908CFF",
Methanophenazine = brewer.pal(9, "YlOrRd")[1],
Ferredoxin = brewer.pal(9, "YlOrRd")[2],
Hydrogenase = brewer.pal(9, "YlOrRd")[3]),
Process = c("Methyl-CoM formation" = "#440154FF",
"Methanogenesis" = "#21908CFF",
"CoB - CoM regeneration" = "#FDE725FF"),
Treatment = c(Control = "#3B528BFF",
SO4 = "#21908CFF",
`ASW-SO4` = "#5DC863FF",
ASW = "#FDE725FF"))
pheatmap(mko_metD_mat,
legend = T,
legend_breaks = c(-3, -2, -1, 0, 1, 2, 3, max(mko_metD_mat, na.rm = T)),
legend_labels = c("-3","-2","-1","0","1","2","3","Abund.\n"),
main = "Methyl-dismutating Methanogenesis",
border_color = NA,
scale = "none",
angle_col = 315,
fontsize = 8,
annotation_col = ann_cols,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_col = c(5, 10, 13),
filename = "InitialFigs/KO_heatmap_methylDis.png",
width = 7,
height = 7)
dev.off()
dev.set(dev.next())
dev.set(dev.next())
# Methyl reduction
ann_cols <- data.frame(row.names = colnames(mko_metR_mat),
"Treatment" = c(rep("Control", 5),
rep("SO4", 5),
rep("ASW-SO4", 3),
rep("ASW", 5)))
ann_rows <- data.frame(row.names = rownames(mko_metR_mat),
Pathway = mko_metR_meta$Pathway_Specific,
Process = mko_metR_meta$Pathway_General,
`M_blatticola` = mko_metR_meta$`M. blatticola`,
`M_stadtmanae` = mko_metR_meta$`M. stadtmanae`,
`M_luminyensis` = mko_metR_meta$`M. luminyensis`,
`M_thermophilum` = mko_metR_meta$`M. thermophilum`)
ann_colors <- list(Pathway = c(Trimethylamine = brewer.pal(7, "Purples")[1],
Dimethylamine = brewer.pal(7, "Purples")[2],
Methylamine = brewer.pal(7, "Purples")[3],
Methylamines = brewer.pal(7, "Purples")[4],
Methanol = brewer.pal(7, "Purples")[5],
Betaine = brewer.pal(7, "Purples")[6],
`DMS/MeSH/MMPA` = brewer.pal(7, "Purples")[7],
`Wood-Ljungdahl - CO2 out` = "orange",
`Na in` = "purple",
"Methyl-CoM reduction" = "#21908CFF",
Methanophenazine = brewer.pal(9, "YlOrRd")[1],
Ferredoxin = brewer.pal(9, "YlOrRd")[2],
Hydrogenase = brewer.pal(9, "YlOrRd")[3],
Formate = brewer.pal(9, "YlOrRd")[4]),
Process = c("Methyl-CoM formation" = "#440154FF",
"Methanogenesis" = "#21908CFF",
"CoB - CoM regeneration" = "#FDE725FF"),
`M_blatticola` = c("Present" = "black",
"Absent" = "white"),
`M_stadtmanae` = c("Present" = "black",
"Absent" = "white"),
`M_luminyensis` = c("Present" = "black",
"Absent" = "white"),
`M_thermophilum` = c("Present" = "black",
"Absent" = "white"),
Treatment = c(Control = "#3B528BFF",
SO4 = "#21908CFF",
`ASW-SO4` = "#5DC863FF",
ASW = "#FDE725FF"))
pheatmap(mko_metR_mat,
legend = T,
legend_breaks = c(-3, -2, -1, 0, 1, 2, 3, max(mko_metR_mat, na.rm = T)),
legend_labels = c("-3","-2","-1","0","1","2","3","Abund.\n"),
main = "Methyl-reducing Methanogenesis",
border_color = NA,
scale = "none",
angle_col = 315,
fontsize = 8,
annotation_col = ann_cols,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_col = c(5, 10, 13),
filename = "InitialFigs/KO_heatmap_methylRed.png",
width = 7,
height = 7)
dev.off()
dev.set(dev.next())
dev.set(dev.next())
