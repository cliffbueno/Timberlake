# Libraries
library(tidyverse)
library(readxl)
library(ggtext)
d <- read_excel("~/Desktop/Nematode_species_individuals.xlsx")
# Melt data into long format and clean data for plotting
# Use BF, OMG, PP, RA, FF (that was the original figure 1 I saw)
d_long <- d %>%
pivot_longer(cols = c("OMsp", "BFsp", "PPsp", "FFsp", "RAsp",
"OMind", "BFind", "PPind", "FFind", "RAind"),
names_to = "variable",
values_to = "value") %>%
separate(variable, into = c("Group", "variable"), sep = 2) %>%
mutate_if(is.character, as.factor) %>%
mutate(Group = factor(Group,
levels = c("BF", "OM", "PP", "RA", "FF"))) %>%
mutate(variable = factor(variable,
levels = c("sp", "ind")))
# Make data_frame storing the text and coordinates for plotting
# All text will go at the top left except for OM sp
# All lines will be plotted except for OM ind (don't want to plot NS relationships)
lab <- data.frame("x" = c(13.5, 13.5, 13.5, 13.5, 13.5, 13.5, 13.5, 13.5, 13.5, 13.5),
"y" = c(14, 14, 14, 14, 14, 1800, 1800, 1800, 1800, 1800),
"lab" = c("0.22, F = 22.6, p < 0.001",
"0.08, F = 6.9, p = 0.01",
"0.28, F = 30.6, p < 0.001",
"0.21, F = 20.9, p < 0.001",
"0.46, F = 65.8, p < 0.001",
"0.12, F = 10.7, p = 0.002",
"N.S.",
"0.30, F = 33.6, p < 0.001",
"0.17, F = 16.4, p < 0.001",
"0.29, F = 32.4, p < 0.001"),
"variable" = factor(c("sp", "sp", "sp", "sp", "sp",
"ind", "ind", "ind", "ind", "ind"),
levels = c("sp", "ind")),
"Group" = factor(c("BF", "OM", "PP", "RA", "FF",
"BF", "OM", "PP", "RA", "FF"),
levels = c("BF", "OM", "PP", "RA", "FF")))
facet_names <- c("sp" = "Species richness/20 g dws",
"ind" = "Individuals/20 g dws",
"BF" = "BF",
"OM" = "OM",
"PP" = "PP",
"RA" = "RA",
"FF" = "FF")
# Plot
# Facet grid - I suggest flipping it so is 5 columns and 2 rows. that way the y -axes are comparable
pdf("~/Desktop/Other/NematodeFig.pdf", width = 8.5, height = 4.5)
ggplot(d_long, aes(x = PR, y = value)) +
geom_point(size = 1.5, alpha = 0.4) +
geom_smooth(data = subset(d_long, Group != "OM" | variable != "ind"),
method = lm, size = 0.5) +
geom_richtext(data = subset(lab, lab != "N.S."),
aes(x = x, y = y, label = paste0("R<sup>2</sup> = ", lab)),
size = 2.5, fill = NA, label.color = NA) +
geom_richtext(data = subset(lab, lab == "N.S."),
aes(x = x, y = y, label = lab),
size = 2.5, fill = NA, label.color = NA) +
labs(x = "Plant species richness",
y = NULL) +
facet_grid(variable ~ Group, scales = "free_y", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 12, face = "bold"),
strip.text = element_text(size = 10))
dev.off()
facet_names <- c("sp" = "Species richness/20 g dws",
"ind" = "Individuals/20 g dws",
"BF" = "Bacterivores",
"OM" = "Omnivores",
"PP" = "Plant Parasites",
"RA" = "Root Associates",
"FF" = "Fungivores")
# Plot
# Facet grid - I suggest flipping it so is 5 columns and 2 rows. that way the y -axes are comparable
pdf("~/Desktop/Other/NematodeFig.pdf", width = 8.5, height = 4.5)
ggplot(d_long, aes(x = PR, y = value)) +
geom_point(size = 1.5, alpha = 0.4) +
geom_smooth(data = subset(d_long, Group != "OM" | variable != "ind"),
method = lm, size = 0.5) +
geom_richtext(data = subset(lab, lab != "N.S."),
aes(x = x, y = y, label = paste0("R<sup>2</sup> = ", lab)),
size = 2.5, fill = NA, label.color = NA) +
geom_richtext(data = subset(lab, lab == "N.S."),
aes(x = x, y = y, label = lab),
size = 2.5, fill = NA, label.color = NA) +
labs(x = "Plant species richness",
y = NULL) +
facet_grid(variable ~ Group, scales = "free_y", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 12, face = "bold"),
strip.text = element_text(size = 10))
dev.off()
library(tidyverse)
library(readxl)
library(ggtext)
# Data (change file path as necessary)
d <- read_excel("~/Desktop/Other/Nematode_species_individuals.xlsx")
d <- read_excel("~/Desktop/Nematode_species_individuals.xlsx")
# Melt data into long format and clean data for plotting
# Use BF, OMG, PP, RA, FF (that was the original figure 1 I saw)
d_long <- d %>%
pivot_longer(cols = c("OMsp", "BFsp", "PPsp", "FFsp", "RAsp",
"OMind", "BFind", "PPind", "FFind", "RAind"),
names_to = "variable",
values_to = "value") %>%
separate(variable, into = c("Group", "variable"), sep = 2) %>%
mutate_if(is.character, as.factor) %>%
mutate(Group = factor(Group,
levels = c("BF", "OM", "PP", "RA", "FF"))) %>%
mutate(variable = factor(variable,
levels = c("sp", "ind")))
# Make data_frame storing the text and coordinates for plotting
# All text will go at the top left except for OM sp
# All lines will be plotted except for OM ind (don't want to plot NS relationships)
lab <- data.frame("x" = c(13.5, 13.5, 13.5, 13.5, 13.5, 13.5, 13.5, 13.5, 13.5, 13.5),
"y" = c(14, 14, 14, 14, 14, 1800, 1800, 1800, 1800, 1800),
"lab" = c("0.22, F = 22.6, p < 0.001",
"0.08, F = 6.9, p = 0.01",
"0.28, F = 30.6, p < 0.001",
"0.21, F = 20.9, p < 0.001",
"0.46, F = 65.8, p < 0.001",
"0.12, F = 10.7, p = 0.002",
"N.S.",
"0.30, F = 33.6, p < 0.001",
"0.17, F = 16.4, p < 0.001",
"0.29, F = 32.4, p < 0.001"),
"variable" = factor(c("sp", "sp", "sp", "sp", "sp",
"ind", "ind", "ind", "ind", "ind"),
levels = c("sp", "ind")),
"Group" = factor(c("BF", "OM", "PP", "RA", "FF",
"BF", "OM", "PP", "RA", "FF"),
levels = c("BF", "OM", "PP", "RA", "FF")))
facet_names <- c("sp" = "Species richness/20 g dws",
"ind" = "Individuals/20 g dws",
"BF" = "Bacteria feeders",
"OM" = "Omnivores",
"PP" = "Plant Parasites",
"RA" = "Root Associates",
"FF" = "Fungal feeders")
# Plot
# Facet grid - I suggest flipping it so is 5 columns and 2 rows. that way the y -axes are comparable
pdf("~/Desktop/Other/NematodeFig.pdf", width = 8.5, height = 4.5)
ggplot(d_long, aes(x = PR, y = value)) +
geom_point(size = 1.5, alpha = 0.4) +
geom_smooth(data = subset(d_long, Group != "OM" | variable != "ind"),
method = lm, size = 0.5) +
geom_richtext(data = subset(lab, lab != "N.S."),
aes(x = x, y = y, label = paste0("R<sup>2</sup> = ", lab)),
size = 2.5, fill = NA, label.color = NA) +
geom_richtext(data = subset(lab, lab == "N.S."),
aes(x = x, y = y, label = lab),
size = 2.5, fill = NA, label.color = NA) +
labs(x = "Plant species richness",
y = NULL) +
facet_grid(variable ~ Group, scales = "free_y", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 12, face = "bold"),
strip.text = element_text(size = 10))
dev.off()
facet_names <- c("sp" = "Species richness/20 g dws",
"ind" = "Individuals/20 g dws",
"BF" = "Bacterial feeders",
"OM" = "Omnivores",
"PP" = "Plant Parasites",
"RA" = "Root Associates",
"FF" = "Fungal feeders")
# Plot
# Facet grid - I suggest flipping it so is 5 columns and 2 rows. that way the y -axes are comparable
pdf("~/Desktop/Other/NematodeFig.pdf", width = 8.5, height = 4.5)
ggplot(d_long, aes(x = PR, y = value)) +
geom_point(size = 1.5, alpha = 0.4) +
geom_smooth(data = subset(d_long, Group != "OM" | variable != "ind"),
method = lm, size = 0.5) +
geom_richtext(data = subset(lab, lab != "N.S."),
aes(x = x, y = y, label = paste0("R<sup>2</sup> = ", lab)),
size = 2.5, fill = NA, label.color = NA) +
geom_richtext(data = subset(lab, lab == "N.S."),
aes(x = x, y = y, label = lab),
size = 2.5, fill = NA, label.color = NA) +
labs(x = "Plant species richness",
y = NULL) +
facet_grid(variable ~ Group, scales = "free_y", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 12, face = "bold"),
strip.text = element_text(size = 10))
dev.off()
#### 1. Setup ####
# Libraries
library(plyr)
library(tidyverse)
library(reshape2)
library(RColorBrewer)
library(stringr)
library(DESeq2)
library(pheatmap)
# Cliff
setwd("~/Documents/GitHub/Timberlake/")
#### 2. Import ####
# Import metadata and clean
# Fixed sample label errors and factor levels
IMG_meta <- read.delim("data/IMGmetadata.txt") %>%
separate(`Genome.Name...Sample.Name`, into = c("Name", "sampleID"),
sep = " - ", remove = F) %>%
mutate(sampleID = gsub("SO4_5", "SO4_5B", sampleID)) %>%
mutate(sampleID = gsub("SO4_4", "SO4_5A", sampleID)) %>%
mutate(sampleID = gsub("SO4_3", "SO4_4", sampleID)) %>%
mutate(sampleID = gsub("SO4_2", "SO4_3", sampleID)) %>%
mutate(sampleID = gsub("SO4_1", "SO4_2", sampleID)) %>%
separate(sampleID, into = c("Treatment", "Replicate"), sep = "_", remove = F) %>%
filter(Treatment != "SourceSoil") %>%
mutate(Treatment = factor(Treatment,
levels = c("Control", "SO4", "ASW-S", "ASW"))) %>%
mutate(Treatment = recode_factor(Treatment, "ASW-S" = "ASW-SO4")) %>%
mutate(Treatment = factor(Treatment,
levels = c("Control", "SO4", "ASW-SO4", "ASW"))) %>%
arrange(Treatment, Replicate)
# Import IMG downloaded functional profile
# Use UI_data_output file, but skip the first 8 columns with the stats output
# The number of columns will vary based on how many genome sets you select in IMG
# Therefore, let's first check the data frame
# Note: you could also use the stats_input file, but we would import that slightly differently
cog <- read.delim("data/TL_COG_cat/UI_data_output.txt") %>%
column_to_rownames(var = "FeatureName")
View(cog)
View(IMG_meta)
# And then do the full import
# Here we get rid of the X in front of the IDs and just select the IDs from the names
cog <- read.delim("data/TL_COG_cat/UI_data_output.txt") %>%
column_to_rownames(var = "FeatureName") %>%
select(9:ncol(.)) %>%
set_names(substring(names(.), first = 1, last = 11)) %>%
set_names(gsub("X", "", names(.))) %>%
select(as.character(IMG_meta$taxon_oid)) %>%
t() %>%
as.data.frame()
# Make sure metadata and functional data match (should be 0!)
sum(IMG_meta$taxon_oid != rownames(cog)) # 0, good
#### 3. Normalize ####
# DESeq normalization, with no design
dds_input_1 <- DESeqDataSetFromMatrix(countData = t(cog),
colData = IMG_meta,
design = ~ 1)
dds_input_SF <- estimateSizeFactors(dds_input_1)
dds_input_D <- estimateDispersions(dds_input_SF)
cog_DESeq <- as.data.frame((counts(dds_input_D, normalized = T))) %>%
t() %>%
as.data.frame()
sum(rownames(cog_DESeq) != IMG_meta$taxon_oid)
View(cog_DESeq)
#### 4. Test ####
# For differential abundance analysis, we need to give a design
# In this case, we'll use treatment
# We'll then specify to compare ASW with control
# We'll then run a Wald test and LRT
# We'll adjust p values with FDR
dds_input_da <- DESeqDataSetFromMatrix(countData = t(cog),
colData = IMG_meta,
design = ~ Treatment)
# Wald
wald <- DESeq(object = dds_input_da, test = "Wald", fitType = "parametric")
res_w <- results(wald,
contrast = c("Treatment", "ASW", "Control"),
independentFiltering = FALSE,
pAdjustMethod = "fdr")
summary(res_w)
plotMA(res_w)
# LRT
lrt <- DESeq(object = dds_input_da, test = "LRT", reduced = ~1)
res_l <- results(lrt,
contrast = c("Treatment", "ASW", "Control"),
independentFiltering = FALSE,
pAdjustMethod = "fdr")
summary(res_l)
# Combine, make categorical
res_p <- data.frame(LRT.p = res_l$padj,
Wald.p = res_w$padj) %>%
mutate(LRT = ifelse(LRT.p < 0.05, "Pfdr < 0.05", "Pfdr > 0.05")) %>%
mutate(Wald = ifelse(Wald.p < 0.05, "Pfdr < 0.05", "Pfdr > 0.05"))
#### 5. Plot ####
# Example with the pheatmap package
# With column and row annotations
# Note pheatmap sometimes does weird things to the R graphic device, therefore it's
## usually good to run dev.set(dev.next()) twice after. pheatmap writes image
## files by default. If you would like to save a .pdf file, then use this function:
save_pheatmap_pdf <- function(x, filename, width = 7, height = 7) {
stopifnot(!missing(x))
stopifnot(!missing(filename))
pdf(filename, width=width, height=height)
grid::grid.newpage()
grid::grid.draw(x$gtable)
dev.off()
}
cog_DESeq <- cog_DESeq %>%
t() %>%
as.data.frame() %>%
set_names(IMG_meta$sampleID)
View(cog_DESeq)
ann_cols <- data.frame(row.names = colnames(cog_DESeq),
"Treatment" = IMG_meta$Treatment)
View(ann_cols)
ann_rows <- data.frame(row.names = rownames(cog_DESeq),
"Wald" = res_p$Wald,
"LRT" = res_p$LRT)
View(ann_rows)
ann_colors <- list(Treatment = c(Control = "#3B528BFF",
SO4 = "#21908CFF",
`ASW-SO4` = "#5DC863FF",
ASW = "#FDE725FF"),
Wald = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
LRT = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"))
pheatmap(cog_DESeq, # data
legend = T, # show legend
legend_breaks = c(-2, -1, 0, 1, 2, 2.5), # adjust depending on data
legend_labels = c("-2","-1","0","1","2","Abund.\n"), # adjust depending on data
main = "", # gives extra space at the top for the legend label
border_color = NA, # no border color
scale = "row", # z-scores, by row
angle_col = 315, # angle of the bottom column labels
fontsize = 8, # master font size
fontsize_row = 6, # row font size
fontsize_col = 6, # column font size
annotation_col = ann_cols, # column annotations
annotation_row = ann_rows, # row annotations
annotation_colors = ann_colors, # annotation colors
cluster_rows = T, # cluster by rows
cluster_cols = F, # cluster by column
gaps_col = c(5, 10, 13), # gaps between columns
filename = "~/Desktop/COG_heatmap.png", # file name
width = 7, # width
height = 7) # height
dev.off()
dev.set(dev.next())
dev.set(dev.next())
# PDF
hm <- pheatmap(cog_DESeq, # data
legend = T, # show legend
legend_breaks = c(-2, -1, 0, 1, 2, 2.5), # adjust depending on data
legend_labels = c("-2","-1","0","1","2","Abund.\n"), # adjust depending on data
main = "", # gives extra space at the top for the legend label
border_color = NA, # no border color
scale = "row", # z-scores, by row
angle_col = 315, # angle of the bottom column labels
fontsize = 8, # master font size
fontsize_row = 6, # row font size
fontsize_col = 6, # column font size
annotation_col = ann_cols, # column annotations
annotation_row = ann_rows, # row annotations
annotation_colors = ann_colors, # annotation colors
cluster_rows = T, # cluster by rows
cluster_cols = F, # cluster by column
gaps_col = c(5, 10, 13)) # gaps between columns
save_pheatmap_pdf(hm, "~/Desktop/COG_heatmap.pdf")
