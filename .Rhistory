dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
dev.off()
dev.off()
pheatmap(cog_DESeq,
legend = T,
legend_breaks = c(-2, -1, 0, 1, 2, 2.5),
legend_labels = c("-2","-1","0","1","2","Abund.\n"),
main = "",
border_color = NA,
scale = "row",
angle_col = 315,
fontsize = 8,
fontsize_row = 6,
fontsize_col = 6,
annotation_col = ann_cols,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = T,
cluster_cols = F,
gaps_col = c(5, 10, 13),
filename = "InitialFigures/COG_heatmap.png",
width = 7,
height = 7)
pheatmap(cog_DESeq,
legend = T,
legend_breaks = c(-2, -1, 0, 1, 2, 2.5),
legend_labels = c("-2","-1","0","1","2","Abund.\n"),
main = "",
border_color = NA,
scale = "row",
angle_col = 315,
fontsize = 8,
fontsize_row = 6,
fontsize_col = 6,
annotation_col = ann_cols,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = T,
cluster_cols = F,
gaps_col = c(5, 10, 13),
filename = "InitialFigs/COG_heatmap.png",
width = 7,
height = 7)
dev.off()
dev.set(dev.next())
dev.set(dev.next())
#### 9. Pfams ####
pfam <- read.delim("data/TL_PFam_cat/UI_data_output.txt") %>%
column_to_rownames(var = "FeatureName") %>%
select(9:31) %>%
set_names(substring(names(.), first = 1, last = 11)) %>%
set_names(gsub("X", "", names(.))) %>%
select(as.character(IMG_meta$taxon_oid)) %>%
t() %>%
as.data.frame()
sum(IMG_meta$taxon_oid != rownames(pfam)) # 0, good
# Normalize
dds_input_1 <- DESeqDataSetFromMatrix(countData = t(pfam),
colData = IMG_meta,
design = ~ 1)
dds_input_SF <- estimateSizeFactors(dds_input_1)
dds_input_D <- estimateDispersions(dds_input_SF)
pfam_DESeq <- as.data.frame((counts(dds_input_D, normalized = T))) %>%
t() %>%
as.data.frame()
sum(rownames(pfam_DESeq) != IMG_meta$taxon_oid)
# Test
dds_input_da <- DESeqDataSetFromMatrix(countData = t(pfam),
colData = IMG_meta,
design = ~ Treatment)
wald <- DESeq(object = dds_input_da, test = "Wald", fitType = "parametric")
res_w <- results(wald,
contrast = c("Treatment", "ASW", "Control"),
independentFiltering = FALSE,
pAdjustMethod = "fdr")
summary(res_w)
plotMA(res_w)
lrt <- DESeq(object = dds_input_da, test = "LRT", reduced = ~1)
res_l <- results(lrt,
contrast = c("Treatment", "ASW", "Control"),
independentFiltering = FALSE,
pAdjustMethod = "fdr")
summary(res_l)
plotMA(res_l)
res_p <- data.frame(LRT.p = res_l$padj,
Wald.p = res_w$padj) %>%
mutate(LRT = ifelse(LRT.p < 0.05, "Pfdr < 0.05", "Pfdr > 0.05")) %>%
mutate(Wald = ifelse(Wald.p < 0.05, "Pfdr < 0.05", "Pfdr > 0.05"))
# Plot
pfam_DESeq <- pfam_DESeq %>%
t() %>%
as.data.frame() %>%
set_names(IMG_meta$sampleID)
ann_cols <- data.frame(row.names = colnames(pfam_DESeq),
"Treatment" = IMG_meta$Treatment)
ann_rows <- data.frame(row.names = rownames(pfam_DESeq),
"Wald" = res_p$Wald,
"LRT" = res_p$LRT)
ann_colors <- list(Treatment = c(Control = "#3B528BFF",
SO4 = "#21908CFF",
`ASW-SO4` = "#5DC863FF",
ASW = "#FDE725FF"),
Wald = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
LRT = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"))
pheatmap(pfam_DESeq,
legend = T,
legend_breaks = c(-2, -1, 0, 1, 2, 2.5),
legend_labels = c("-2","-1","0","1","2","Abund.\n"),
main = "",
border_color = NA,
scale = "row",
angle_col = 315,
fontsize = 8,
fontsize_row = 6,
fontsize_col = 6,
annotation_col = ann_cols,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = T,
cluster_cols = F,
gaps_col = c(5, 10, 13))
pheatmap(pfam_DESeq,
legend = T,
#legend_breaks = c(-2, -1, 0, 1, 2, 2.5),
#legend_labels = c("-2","-1","0","1","2","Abund.\n"),
main = "",
border_color = NA,
scale = "row",
angle_col = 315,
fontsize = 8,
fontsize_row = 6,
fontsize_col = 6,
annotation_col = ann_cols,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = T,
cluster_cols = F,
gaps_col = c(5, 10, 13))
pheatmap(pfam_DESeq,
legend = T,
legend_breaks = c(-3, -2, -1, 0, 1, 2, 3, 3.5),
legend_labels = c("-3","-2","-1","0","1","2","3","Abund.\n"),
main = "",
border_color = NA,
scale = "row",
angle_col = 315,
fontsize = 8,
fontsize_row = 6,
fontsize_col = 6,
annotation_col = ann_cols,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = T,
cluster_cols = F,
gaps_col = c(5, 10, 13))
pheatmap(pfam_DESeq,
legend = T,
legend_breaks = c(-3, -2, -1, 0, 1, 2, 3, 3.25),
legend_labels = c("-3","-2","-1","0","1","2","3","Abund.\n"),
main = "",
border_color = NA,
scale = "row",
angle_col = 315,
fontsize = 8,
fontsize_row = 6,
fontsize_col = 6,
annotation_col = ann_cols,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = T,
cluster_cols = F,
gaps_col = c(5, 10, 13))
pheatmap(pfam_DESeq,
legend = T,
legend_breaks = c(-3, -2, -1, 0, 1, 2, 3, 3.3),
legend_labels = c("-3","-2","-1","0","1","2","3","Abund.\n"),
main = "",
border_color = NA,
scale = "row",
angle_col = 315,
fontsize = 8,
fontsize_row = 6,
fontsize_col = 6,
annotation_col = ann_cols,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = T,
cluster_cols = F,
gaps_col = c(5, 10, 13))
pheatmap(pfam_DESeq,
legend = T,
legend_breaks = c(-3, -2, -1, 0, 1, 2, 3, 3.3),
legend_labels = c("-3","-2","-1","0","1","2","3","Abund.\n"),
main = "",
border_color = NA,
scale = "row",
angle_col = 315,
fontsize = 8,
fontsize_row = 6,
fontsize_col = 6,
annotation_col = ann_cols,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = T,
cluster_cols = F,
gaps_col = c(5, 10, 13),
filename = "InitialFigs/Pfam_heatmap.png",
width = 7,
height = 7)
dev.off()
dev.set(dev.next())
dev.set(dev.next())
#### 10. KEGG Module ####
mod <- read.delim("data/TL_KEGG_mod/UI_data_output.txt") %>%
column_to_rownames(var = "FeatureName") %>%
select(9:31) %>%
set_names(substring(names(.), first = 1, last = 11)) %>%
set_names(gsub("X", "", names(.))) %>%
select(as.character(IMG_meta$taxon_oid)) %>%
t() %>%
as.data.frame()
mod <- read.delim("data/TL_KEGG_mod/UI_data_output.txt")
View(mod)
duplicated(mod$FeatureName)
mod$FeatureName[251]
mod <- read.delim("data/TL_KEGG_mod/UI_data_output.txt") %>%
mutate(FeatureName = paste(Feature, FeatureName, sep = " ")) %>%
column_to_rownames(var = "FeatureName")
View(mod)
#### 10. KEGG Module ####
mod <- read.delim("data/TL_KEGG_mod/UI_data_output.txt") %>%
mutate(FeatureName = paste(Feature, FeatureName, sep = " ")) %>%
column_to_rownames(var = "FeatureName") %>%
select(9:31) %>%
set_names(substring(names(.), first = 1, last = 11)) %>%
set_names(gsub("X", "", names(.))) %>%
select(as.character(IMG_meta$taxon_oid)) %>%
t() %>%
as.data.frame()
sum(IMG_meta$taxon_oid != rownames(mod)) # 0, good
# Normalize
dds_input_1 <- DESeqDataSetFromMatrix(countData = t(mod),
colData = IMG_meta,
design = ~ 1)
dds_input_SF <- estimateSizeFactors(dds_input_1)
dds_input_D <- estimateDispersions(dds_input_SF)
mod_DESeq <- as.data.frame((counts(dds_input_D, normalized = T))) %>%
t() %>%
as.data.frame()
sum(rownames(mod_DESeq) != IMG_meta$taxon_oid)
# Test
dds_input_da <- DESeqDataSetFromMatrix(countData = t(mod),
colData = IMG_meta,
design = ~ Treatment)
wald <- DESeq(object = dds_input_da, test = "Wald", fitType = "parametric")
res_w <- results(wald,
contrast = c("Treatment", "ASW", "Control"),
independentFiltering = FALSE,
pAdjustMethod = "fdr")
summary(res_w)
plotMA(res_w)
lrt <- DESeq(object = dds_input_da, test = "LRT", reduced = ~1)
res_l <- results(lrt,
contrast = c("Treatment", "ASW", "Control"),
independentFiltering = FALSE,
pAdjustMethod = "fdr")
summary(res_l)
plotMA(res_l)
res_p <- data.frame(LRT.p = res_l$padj,
Wald.p = res_w$padj) %>%
mutate(LRT = ifelse(LRT.p < 0.05, "Pfdr < 0.05", "Pfdr > 0.05")) %>%
mutate(Wald = ifelse(Wald.p < 0.05, "Pfdr < 0.05", "Pfdr > 0.05"))
# Plot
mod_DESeq <- mod_DESeq %>%
t() %>%
as.data.frame() %>%
set_names(IMG_meta$sampleID)
ann_cols <- data.frame(row.names = colnames(mod_DESeq),
"Treatment" = IMG_meta$Treatment)
ann_rows <- data.frame(row.names = rownames(mod_DESeq),
"Wald" = res_p$Wald,
"LRT" = res_p$LRT)
ann_colors <- list(Treatment = c(Control = "#3B528BFF",
SO4 = "#21908CFF",
`ASW-SO4` = "#5DC863FF",
ASW = "#FDE725FF"),
Wald = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
LRT = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"))
pheatmap(mod_DESeq,
legend = T,
legend_breaks = c(-3, -2, -1, 0, 1, 2, 3, 3.3),
legend_labels = c("-3","-2","-1","0","1","2","3","Abund.\n"),
main = "",
border_color = NA,
scale = "row",
angle_col = 315,
fontsize = 8,
fontsize_row = 6,
fontsize_col = 6,
annotation_col = ann_cols,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = T,
cluster_cols = F,
gaps_col = c(5, 10, 13))
pheatmap(mod_DESeq,
legend = T,
legend_breaks = c(-3, -2, -1, 0, 1, 2, 3, 3.3),
legend_labels = c("-3","-2","-1","0","1","2","3","Abund.\n"),
main = "",
border_color = NA,
scale = "row",
angle_col = 315,
fontsize = 8,
fontsize_row = 6,
fontsize_col = 6,
annotation_col = ann_cols,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_col = c(5, 10, 13))
View(res_p)
# Subset to significant (because so many)
res_p$sig <- ifelse(LRT.p < 0.05 & Wald.p < 0.05, "Sig", "NS")
res_p <- data.frame(LRT.p = res_l$padj,
Wald.p = res_w$padj) %>%
mutate(LRT = ifelse(LRT.p < 0.05, "Pfdr < 0.05", "Pfdr > 0.05")) %>%
mutate(Wald = ifelse(Wald.p < 0.05, "Pfdr < 0.05", "Pfdr > 0.05")) %>%
mutate(Sig = ifelse(LRT.p < 0.05 & Wald.p < 0.05, "Sig", "NS"))
View(res_p)
res_p <- data.frame(mod = rownames(res_l$padj),
LRT.p = res_l$padj,
Wald.p = res_w$padj) %>%
mutate(LRT = ifelse(LRT.p < 0.05, "Pfdr < 0.05", "Pfdr > 0.05")) %>%
mutate(Wald = ifelse(Wald.p < 0.05, "Pfdr < 0.05", "Pfdr > 0.05")) %>%
mutate(Sig = ifelse(LRT.p < 0.05 & Wald.p < 0.05, "Sig", "NS"))
rownames(res_l$padj)
res_l$padj
View(res_l$padj)
res_p <- data.frame(mod = rownames(mod),
LRT.p = res_l$padj,
Wald.p = res_w$padj) %>%
mutate(LRT = ifelse(LRT.p < 0.05, "Pfdr < 0.05", "Pfdr > 0.05")) %>%
mutate(Wald = ifelse(Wald.p < 0.05, "Pfdr < 0.05", "Pfdr > 0.05")) %>%
mutate(Sig = ifelse(LRT.p < 0.05 & Wald.p < 0.05, "Sig", "NS"))
res_p <- data.frame(mod = colnames(mod),
LRT.p = res_l$padj,
Wald.p = res_w$padj) %>%
mutate(LRT = ifelse(LRT.p < 0.05, "Pfdr < 0.05", "Pfdr > 0.05")) %>%
mutate(Wald = ifelse(Wald.p < 0.05, "Pfdr < 0.05", "Pfdr > 0.05")) %>%
mutate(Sig = ifelse(LRT.p < 0.05 & Wald.p < 0.05, "Sig", "NS"))
res_p <- data.frame(mod = colnames(mod),
LRT.p = res_l$padj,
Wald.p = res_w$padj) %>%
mutate(LRT = ifelse(LRT.p < 0.05, "Pfdr < 0.05", "Pfdr > 0.05")) %>%
mutate(Wald = ifelse(Wald.p < 0.05, "Pfdr < 0.05", "Pfdr > 0.05")) %>%
mutate(Sig = ifelse(LRT.p < 0.05 & Wald.p < 0.05, "Sig", "NS")) %>%
filter(Sig =- "Sig")
res_p <- data.frame(mod = colnames(mod),
LRT.p = res_l$padj,
Wald.p = res_w$padj) %>%
mutate(LRT = ifelse(LRT.p < 0.05, "Pfdr < 0.05", "Pfdr > 0.05")) %>%
mutate(Wald = ifelse(Wald.p < 0.05, "Pfdr < 0.05", "Pfdr > 0.05")) %>%
mutate(Sig = ifelse(LRT.p < 0.05 & Wald.p < 0.05, "Sig", "NS")) %>%
filter(Sig == "Sig")
View(mod_DESeq)
# Plot
mod_DESeq <- mod_DESeq %>%
filter(rownames(.) %in% res_p$mod) %>%
t() %>%
as.data.frame() %>%
set_names(IMG_meta$sampleID)
View(mod_DESeq)
mod_DESeq <- mod_DESeq %>%
filter(rownames(.) %in% res_p$mod) %>%
t() %>%
as.data.frame()
View(mod_DESeq)
mod_DESeq <- as.data.frame((counts(dds_input_D, normalized = T))) %>%
t() %>%
as.data.frame()
sum(rownames(mod_DESeq) != IMG_meta$taxon_oid)
# Plot
mod_DESeq <- mod_DESeq %>%
filter(rownames(.) %in% res_p$mod) %>%
t() %>%
as.data.frame() %>%
set_names(IMG_meta$sampleID)
View(mod_DESeq)
# Plot
mod_DESeq <- mod_DESeq %>%
t() %>%
as.data.frame() %>%
filter(rownames(.) %in% res_p$mod) %>%
set_names(IMG_meta$sampleID)
ann_cols <- data.frame(row.names = colnames(mod_DESeq),
"Treatment" = IMG_meta$Treatment)
ann_rows <- data.frame(row.names = rownames(mod_DESeq),
"Wald" = res_p$Wald,
"LRT" = res_p$LRT)
ann_colors <- list(Treatment = c(Control = "#3B528BFF",
SO4 = "#21908CFF",
`ASW-SO4` = "#5DC863FF",
ASW = "#FDE725FF"),
Wald = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
LRT = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"))
pheatmap(mod_DESeq,
legend = T,
legend_breaks = c(-3, -2, -1, 0, 1, 2, 3, 3.3),
legend_labels = c("-3","-2","-1","0","1","2","3","Abund.\n"),
main = "",
border_color = NA,
scale = "row",
angle_col = 315,
fontsize = 8,
fontsize_row = 6,
fontsize_col = 6,
annotation_col = ann_cols,
#annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_col = c(5, 10, 13))
pheatmap(mod_DESeq,
legend = T,
legend_breaks = c(-3, -2, -1, 0, 1, 2, 3, 3.3),
legend_labels = c("-3","-2","-1","0","1","2","3","Abund.\n"),
main = "",
border_color = NA,
scale = "row",
angle_col = 315,
fontsize = 8,
fontsize_row = 6,
fontsize_col = 6,
annotation_col = ann_cols,
#annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = T,
cluster_cols = F,
gaps_col = c(5, 10, 13))
pheatmap(mod_DESeq,
legend = T,
legend_breaks = c(-3, -2, -1, 0, 1, 2, 3, 3.3),
legend_labels = c("-3","-2","-1","0","1","2","3","Abund.\n"),
main = "",
border_color = NA,
scale = "row",
angle_col = 315,
fontsize = 8,
fontsize_row = 6,
fontsize_col = 6,
annotation_col = ann_cols,
#annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = T,
cluster_cols = F,
gaps_col = c(5, 10, 13),
filename = "InitialFigs/mod_heatmap.png",
width = 7,
height = 7)
dev.off()
dev.set(dev.next())
dev.set(dev.next())
pheatmap(mod_DESeq,
legend = T,
legend_breaks = c(-3, -2, -1, 0, 1, 2, 3, 3.3),
legend_labels = c("-3","-2","-1","0","1","2","3","Abund.\n"),
main = "",
border_color = NA,
scale = "row",
angle_col = 315,
fontsize = 8,
fontsize_row = 6,
fontsize_col = 6,
annotation_col = ann_cols,
#annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = T,
cluster_cols = F,
gaps_col = c(5, 10, 13),
filename = "InitialFigs/KEGGmod_heatmap.png",
width = 8,
height = 7)
dev.off()
dev.set(dev.next())
dev.set(dev.next())
