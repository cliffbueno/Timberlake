axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
strip.text = element_text(size = 4),
strip.background = element_rect(size = 0.2),
axis.line.y = element_blank(),
legend.margin = margin(0, 0, 0, 5, unit = "pt"),
legend.box.margin = margin(0, 0, 0, 5, unit = "pt"),
legend.key.size = unit(0.4, "cm"))
phy
plot_taxa_bars(tax_sum_phyla,
nc$map_loaded,
"sampleID",
num_taxa = 12,
data_only = F)
View(tax_sum_phyla)
View(nc$data_loaded)
colnames(nc$data_loaded) <- rownames(nc$map_loaded)
# Phyla, all samples
tax_sum_phyla <- summarize_taxonomy(input = nc, level = 2, report_higher_tax = F)
nc$map_loaded$sampleID <- as.factor(rownames(nc$map_loaded))
# Phyla, all samples
tax_sum_phyla <- summarize_taxonomy(input = nc, level = 2, report_higher_tax = F)
nc$map_loaded$sampleID <- rownames(nc$map_loaded)
barsP <- plot_taxa_bars(tax_sum_phyla,
nc$map_loaded,
"sampleID",
num_taxa = 12,
data_only = F) %>%
mutate(taxon = fct_rev(taxon)) %>%
left_join(., nc$map_loaded, by = c("group_by" = "sampleID"))
barsP <- plot_taxa_bars(tax_sum_phyla,
nc$map_loaded,
"sampleID",
num_taxa = 12,
data_only = TRUE) %>%
mutate(taxon = fct_rev(taxon)) %>%
left_join(., nc$map_loaded, by = c("group_by" = "sampleID"))
topphy <- barsP %>%
group_by(taxon) %>%
summarise(mean = mean(mean_value)) %>%
filter(taxon != "Other") %>%
arrange(-mean)
phy <- ggplot(barsP, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, size = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Phylum") +
scale_fill_manual(values = c("grey90", brewer.pal(12, "Paired")[12:1])) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_grid(~ Treatment, space = "free", scales = "free_x") +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
strip.text = element_text(size = 4),
strip.background = element_rect(size = 0.2),
axis.line.y = element_blank(),
legend.margin = margin(0, 0, 0, 5, unit = "pt"),
legend.box.margin = margin(0, 0, 0, 5, unit = "pt"),
legend.key.size = unit(0.4, "cm"))
phy
# Guilds all samples
tax_sum_guilds <- summarize_taxonomy(input = nc, level = 9, report_higher_tax = F)
nc$map_loaded$sampleID <- rownames(nc$map_loaded)
barsG <- plot_taxa_bars(tax_sum_guilds,
nc$map_loaded,
"sampleID",
num_taxa = 20,
data_only = TRUE) %>%
filter(taxon != "NA") %>%
droplevels() %>%
mutate(taxon = factor(taxon,
levels = Guild_cols$Guild)) %>%
left_join(., nc$map_loaded, by = c("group_by" = "sampleID"))
tallest_bar <- barsG %>%
group_by(group_by) %>%
summarise(sum = sum(mean_value))
topgui <- barsG %>%
group_by(taxon) %>%
summarise(mean = mean(mean_value)) %>%
arrange(-mean)
gui <- ggplot(barsG, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, size = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Guild") +
scale_fill_manual(values = Guild_cols$color) +
scale_y_continuous(expand = c(max(tallest_bar$sum)/100, max(tallest_bar$sum)/100)) +
facet_nested(~ Treatment, space = "free", scales = "free_x") +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 8, angle = 90, vjust = 0.5),
axis.ticks.x = element_blank(),
strip.text = element_blank(),
strip.background = element_rect(size = 0.2),
axis.line.y = element_blank(),
legend.margin = margin(0, 0, 0, 5, unit = "pt"),
legend.box.margin = margin(0, 0, 0, 5, unit = "pt"),
legend.key.size = unit(0.4, "cm"))
plot_grid(phy, gui, ncol = 1, rel_heights = c(0.45, 0.55), align = "v", axis = "trbl")
plot_grid(phy, gui, ncol = 1, rel_heights = c(0.45, 0.55), align = "v", axis = "trbl")
gui <- ggplot(barsG, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, size = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Guild") +
scale_fill_manual(values = Guild_cols$color) +
scale_y_continuous(expand = c(max(tallest_bar$sum)/100, max(tallest_bar$sum)/100)) +
facet_nested(~ Treatment, space = "free", scales = "free_x") +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 8, angle = 90, vjust = 0.5, hjust = 1),
axis.ticks.x = element_blank(),
strip.text = element_blank(),
strip.background = element_rect(size = 0.2),
axis.line.y = element_blank(),
legend.margin = margin(0, 0, 0, 5, unit = "pt"),
legend.box.margin = margin(0, 0, 0, 5, unit = "pt"),
legend.key.size = unit(0.4, "cm"))
plot_grid(phy, gui, ncol = 1, rel_heights = c(0.45, 0.55), align = "v", axis = "trbl")
png("InitialFigs/PhylaGuilds_mTAG.png", width = 8, height = 6, units = "in", res = 300)
plot_grid(phy, gui, ncol = 1, rel_heights = c(0.45, 0.55), align = "v", axis = "trbl")
dev.off()
# Stats
# All data
phy_stats <- taxa_summary_by_sample_type(tax_sum_phyla,
nc$map_loaded,
type_header = 'Treatment',
filter_level = 0.01,
test_type = 'KW') %>%
filter(rownames(.) %in% barsP$taxon) %>%
arrange(desc(rownames(.))) %>%
mutate(Sig = ifelse(pvalsFDR < 0.05, "Pfdr < 0.05", "Pfdr > 0.05"))
gui_stats <- taxa_summary_by_sample_type(tax_sum_guilds,
nc$map_loaded,
type_header = 'Treatment',
filter_level = 0,
test_type = 'KW') %>%
filter(rownames(.) %in% barsG$taxon) %>%
arrange(desc(rownames(.))) %>%
mutate(Sig = ifelse(pvalsFDR < 0.05, "Pfdr < 0.05", "Pfdr > 0.05"))
# But this should be refined. Let's test field vs. lab control. And just lab treatments
fiecon <- filter_data(nc,
"Treatment",
keep_vals = c("Field", "Control"))
sum_phy_fiecon <- summarize_taxonomy(input = fiecon, level = 2, report_higher_tax = F)
phy_stats_fiecon <- taxa_summary_by_sample_type(sum_phy_fiecon,
fiecon$map_loaded,
type_header = 'Treatment',
filter_level = 0,
test_type = 'MW') %>%
filter(rownames(.) %in% barsP$taxon) %>%
arrange(desc(rownames(.))) %>%
mutate(Sig = ifelse(pvalsFDR < 0.05, "Pfdr < 0.05", "Pfdr > 0.05"))
sum_gui_fiecon <- summarize_taxonomy(input = fiecon, level = 9, report_higher_tax = F)
gui_stats_fiecon <- taxa_summary_by_sample_type(sum_gui_fiecon,
fiecon$map_loaded,
type_header = 'Treatment',
filter_level = 0,
test_type = 'MW') %>%
filter(rownames(.) %in% barsG$taxon) %>%
arrange(desc(rownames(.))) %>%
mutate(Sig = ifelse(pvalsFDR < 0.05, "Pfdr < 0.05", "Pfdr > 0.05"))
lab <- filter_data(nc,
"Treatment",
filter_vals = "Field")
sum_phy_lab <- summarize_taxonomy(input = lab, level = 2, report_higher_tax = F)
phy_stats_lab <- taxa_summary_by_sample_type(sum_phy_lab,
lab$map_loaded,
type_header = 'Treatment',
filter_level = 0,
test_type = 'KW') %>%
filter(rownames(.) %in% barsP$taxon) %>%
arrange(desc(rownames(.))) %>%
mutate(Sig = ifelse(pvalsFDR < 0.05, "Pfdr < 0.05", "Pfdr > 0.05"))
sum_gui_lab <- summarize_taxonomy(input = lab, level = 9, report_higher_tax = F)
gui_stats_lab <- taxa_summary_by_sample_type(sum_gui_lab,
lab$map_loaded,
type_header = 'Treatment',
filter_level = 0,
test_type = 'KW') %>%
filter(rownames(.) %in% barsG$taxon) %>%
arrange(desc(rownames(.))) %>%
mutate(Sig = ifelse(pvalsFDR < 0.05, "Pfdr < 0.05", "Pfdr > 0.05"))
#### _Ratios ####
# Add MG:MT ratio and AO:NOB ratio to metadata
nc_guilds <- summarize_taxonomy(input = nc, level = 9, report_higher_tax = F) %>%
t() %>%
as.data.frame() %>%
mutate(AO_NOB = (AOA + AOB) / NOB) %>%
mutate(MG = CH4_ac + CH4_H2 + CH4_me + CH4_mix) %>%
mutate(MT = MOB_I + MOB_II + MOB_IIa) %>%
mutate(MG_MT = (CH4_ac + CH4_H2 + CH4_me + CH4_mix)/(MOB_I + MOB_II + MOB_IIa)) %>%
mutate_all(function(x) ifelse(is.infinite(x), 0.031608523, x))
sum(rownames(nc_guilds) != rownames(nc$map_loaded))
nc$map_loaded$MG_MT <- nc_guilds$MG_MT
nc$map_loaded$AO_NOB <- nc_guilds$AO_NOB
summary(lm(log(MG_MT) ~ log(AO_NOB), data = nc$map_loaded)) # Sig +
a <- ggplot(nc$map_loaded, aes(AO_NOB, MG_MT)) +
geom_point(size = 2, aes(colour = Treatment)) +
geom_smooth(method = "lm", size = 0.5, alpha = 0.1, linetype = "solid", se = F) +
labs(x = "Ammonia oxidizers: Nitrite oxidizing bacteria",
y = "Methanogens: Methanotrophs",
colour = "Treatment",
) +
scale_colour_viridis_d() +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10',
breaks = c(0.01, 0.1, 1, 10, 100),
labels = c(0.01, 0.1, 1, 10, 100)) +
guides(colour = guide_legend(shape = c(17, 16, 18, 18, 15))) +
theme_bw()
l <- get_legend(a)
a <- a + theme(legend.position = "none",
axis.title = element_text(size = 10))
summary(lm(MT ~ log(AO_NOB), data = nc$map_loaded)) # NS
sum(rownames(nc_guilds) != rownames(nc$map_loaded))
nc$map_loaded$MT <- nc_guilds$MT
summary(lm(log(MG_MT) ~ log(AO_NOB), data = nc$map_loaded)) # Sig +
a <- ggplot(nc$map_loaded, aes(AO_NOB, MG_MT)) +
geom_point(size = 2, aes(colour = Treatment)) +
geom_smooth(method = "lm", size = 0.5, alpha = 0.1, linetype = "solid", se = F) +
labs(x = "Ammonia oxidizers: Nitrite oxidizing bacteria",
y = "Methanogens: Methanotrophs",
colour = "Treatment",
) +
scale_colour_viridis_d() +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10',
breaks = c(0.01, 0.1, 1, 10, 100),
labels = c(0.01, 0.1, 1, 10, 100)) +
guides(colour = guide_legend(shape = c(17, 16, 18, 18, 15))) +
theme_bw()
l <- get_legend(a)
a <- a + theme(legend.position = "none",
axis.title = element_text(size = 10))
summary(lm(MT ~ log(AO_NOB), data = nc$map_loaded)) # NS
b <- ggplot(nc$map_loaded, aes(AO_NOB, MT*100)) +
geom_point(size = 2, aes(colour = Treatment)) +
geom_smooth(method = "lm", size = 0.5, alpha = 0.1, linetype = "dotted", se = F) +
labs(x = "Ammonia oxidizers: Nitrite oxidizing bacteria",
y = "Methanotroph % abundance",
colour = "Treatment",
) +
scale_colour_viridis_d() +
scale_x_continuous(trans = 'log10') +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 10))
plot_grid(a, b, l, ncol = 3, rel_widths = c(0.43, 0.43, 0.14), labels = c("a", "b", ""))
png("InitialFigs/Ratios_mTAG.png", width = 8, height = 4, units = "in", res = 300)
plot_grid(a, b, l, ncol = 3, rel_widths = c(0.43, 0.43, 0.14), labels = c("a", "b", ""))
dev.off()
# MG:MT
leveneTest(nc$map_loaded$MG_MT ~ nc$map_loaded$Treatment) # Homogeneous
m <- aov(MG_MT ~ Treatment, data = nc$map_loaded)
shapiro.test(m$residuals) # Not normal
hist(m$residuals)
summary(m) # NSD
TukeyHSD(m)
t <- emmeans(object = m, specs = "Treatment") %>%
cld(object = ., adjust = "Tukey", Letters = letters, alpha = 0.05) %>%
mutate(name = "MG_MT",
y = max(nc$map_loaded$MG_MT)+(max(nc$map_loaded$MG_MT)-min(nc$map_loaded$MG_MT))/2)
png("InitialFigs/MG_MT_mTAG.png", width = 7, height = 5, units = "in", res = 300)
ggplot(nc$map_loaded, aes(reorder(Treatment, MG_MT, mean), MG_MT)) +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_boxplot(aes(colour = Treatment), outlier.shape = NA) +
geom_jitter(size = 3, width = 0.2, aes(colour = Treatment)) +
geom_text(data = t, aes(Treatment, y, label = str_trim(.group)),
size = 4, color = "black") +
labs(x = "Treatment",
y = "Methanogens:Methanotrophs") +
scale_y_continuous(trans = 'log10',
breaks = c(0.01, 0.1, 1, 10, 100),
labels = c(0.01, 0.1, 1, 10, 100)) +
scale_colour_viridis_d() +
guides(colour = "none") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.position = c(1,0),
legend.justification = c(1,0),
legend.background = element_blank())
dev.off()
#### _Methanogens ####
nc_mg <- filter_taxa_from_input(nc,
taxa_to_keep = c("CH4_ac", "CH4_H2", "CH4_me", "CH4_mix"),
at_spec_level = 9)
tax_sum_mg <- summarize_taxonomy(input = nc_mg,
level = 5,
report_higher_tax = T,
relative = F) %>%
mutate_all(funs((./4271)*100))
rownames(tax_sum_mg) <- gsub("Archaea; ", "", rownames(tax_sum_mg))
barsMG <- plot_taxa_bars(tax_sum_mg,
nc_mg$map_loaded,
"sampleID",
num_taxa = 20,
data_only = TRUE) %>%
left_join(., nc_mg$map_loaded, by = c("group_by" = "sampleID"))
topmg <- barsMG %>%
group_by(taxon) %>%
summarise(mean = mean(mean_value)) %>%
arrange(-mean)
barsMG <- barsMG %>%
mutate(taxon = factor(taxon, levels = topmg$taxon)) %>%
mutate(taxon = fct_rev(taxon))
ggplot(barsMG, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, size = 0.25) +
labs(x = "Sample", y = "% Abundance", fill = "Phylum; Class; Order; Family") +
scale_fill_manual(values = brewer_pal(palette = "Paired")(10)) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_grid(~ Treatment, space = "free", scales = "free_x") +
guides(fill = guide_legend(ncol = 1)) +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 8, angle = 90, vjust = 0.5),
axis.ticks.x = element_blank(),
strip.text = element_text(size = 6),
strip.background = element_rect(size = 0.2),
axis.line.y = element_blank(),
legend.position = c(0,1),
legend.justification = c(0,1),
legend.background = element_blank(),
legend.key.size = unit(0.25, "cm"),
legend.text = element_text(size = 6))
png("InitialFigs/Methanogens_mTAG.png", width = 7, height = 5, units = "in", res = 300)
ggplot(barsMG, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, size = 0.25) +
labs(x = "Sample", y = "% Abundance", fill = "Phylum; Class; Order; Family") +
scale_fill_manual(values = brewer_pal(palette = "Paired")(10)) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_grid(~ Treatment, space = "free", scales = "free_x") +
guides(fill = guide_legend(ncol = 1)) +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 8, angle = 90, vjust = 0.5, hjust = 1),
axis.ticks.x = element_blank(),
strip.text = element_text(size = 6),
strip.background = element_rect(size = 0.2),
axis.line.y = element_blank(),
legend.position = c(0,1),
legend.justification = c(0,1),
legend.background = element_blank(),
legend.key.size = unit(0.25, "cm"),
legend.text = element_text(size = 6))
dev.off()
#### _Methanotrophs ####
nc_mt <- filter_taxa_from_input(nc,
taxa_to_keep = c("MOB_I", "MOB_II", "MOB_IIa"),
at_spec_level = 9)
tax_sum_mt <- summarize_taxonomy(input = nc_mt,
level = 6,
report_higher_tax = F,
relative = F) %>%
mutate_all(funs((./4271)*100))
rownames(tax_sum_mt)[21] <- "Methyloligellaceae; uncultured"
barsMT <- plot_taxa_bars(tax_sum_mt,
nc_mt$map_loaded,
"sampleID",
num_taxa = 20,
data_only = TRUE) %>%
mutate(taxon = gsub("NA", "Unclassified", taxon)) %>%
mutate(taxon = fct_relevel(taxon, "Other", after = Inf)) %>%
mutate(taxon = fct_relevel(taxon, "Unclassified", after = Inf)) %>%
mutate(taxon = fct_rev(taxon)) %>%
left_join(., nc_mt$map_loaded, by = c("group_by" = "sampleID"))
topmt <- barsMT %>%
group_by(taxon) %>%
summarise(mean = mean(mean_value)) %>%
arrange(-mean)
barsMT <- barsMT %>%
mutate(taxon = factor(taxon, levels = topmt$taxon)) %>%
mutate(taxon = fct_relevel(taxon, "Other", after = Inf)) %>%
mutate(taxon = fct_relevel(taxon, "Unclassified", after = Inf)) %>%
mutate(taxon = fct_rev(taxon))
nb.cols <- 21
mycolors <- colorRampPalette(brewer.pal(12, "Paired"))(nb.cols)
png("InitialFigs/Methanotrophs_mTAG.png", width = 6.5, height = 6, units = "in", res = 300)
ggplot(barsMT, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, size = 0.25) +
labs(x = "Sample", y = "% Abundance", fill = "Genus") +
scale_fill_manual(values = c("grey75", "grey90", mycolors)) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_grid(~ Treatment, space = "free", scales = "free_x") +
guides(fill = guide_legend(ncol = 1)) +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 8, angle = 90, vjust = 0.5, hjust = 1),
axis.ticks.x = element_blank(),
strip.text = element_text(size = 6),
strip.background = element_rect(size = 0.2),
axis.line.y = element_blank(),
legend.position = "right",
#legend.justification = c(1,1),
#legend.background = element_blank(),
legend.key.size = unit(0.3, "cm"))
dev.off()
#### 7. BGC ####
# Don't need to repeat the BGC-only stuff
# But do run the BGC-microbe stuff
env_nona <- env_nona_nc %>%
dplyr::select(-Cl_mgL)
meth_corr_by_taxonomy(input = nc, level = 2, threshold = 0.5, data = "No")
# Plot correlations for different taxonomic levels at a given % relative abundance threshold
png("InitialFigs/CH4_Phyla_mTAG.png", width = 7, height = 5, units = "in", res = 300)
meth_corr_by_taxonomy(input = nc, level = 2, threshold = 0.5, data = "No")
dev.off()
meth_corr_by_taxonomy(input = nc, level = 3, threshold = 0.5, data = "No")
meth_corr_by_taxonomy(input = nc, level = 4, threshold = 0.5, data = "No")
meth_corr_by_taxonomy(input = nc, level = 5, threshold = 0.5, data = "No")
meth_corr_by_taxonomy(input = nc, level = 6, threshold = 0.5, data = "No")
meth_corr_by_taxonomy(input = nc, level = 8, threshold = 0.5, data = "No")
png("InitialFigs/CH4_Guilds_mTAG.png", width = 7, height = 5, units = "in", res = 300)
meth_corr_by_taxonomy(input = nc, level = 9, threshold = 0, data = "No")
dev.off()
meth_corr_by_taxonomy(input = nc, level = 9, threshold = 0, data = "No")
# Input
mtag <- readRDS("input_filt_rare_mTAGs.rds")
# Input
mtag <- readRDS("data/input_filt_rare_mTAGs.rds")
itag <- readRDS("data/nc.rds")
# Get same samples
s <- mtag$map_loaded %>%
filter(sampleID %in% itag$map_loaded$sampleID)
mtag <- filter_data(mtag,
filter_cat = "sampleID",
keep_vals = s$sampleID)
itag <- filter_data(itag,
filter_cat = "sampleID",
keep_vals = s$sampleID)
# Get same sample order
mtag$map_loaded <- mtag$map_loaded %>%
arrange(sampleID)
mtag$data_loaded <- mtag$data_loaded %>%
dplyr::select(rownames(mtag$map_loaded))
itag$map_loaded <- itag$map_loaded %>%
arrange(sampleID)
itag$data_loaded <- itag$data_loaded %>%
dplyr::select(rownames(itag$map_loaded))
sum(mtag$map_loaded$sampleID != itag$map_loaded$sampleID) # Good
rownames(mtag$map_loaded)
rownames(nc$map_loaded)
rownames(itag$map_loaded)
# Phyla
Pmtag <- summarize_taxonomy(input = mtag, level = 2, report_higher_tax = F) %>%
plot_taxa_bars(.,
mtag$map_loaded,
"sampleID",
num_taxa = 12,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
pivot_wider(names_from = group_by,
values_from = mean_value) %>%
column_to_rownames(var = "taxon") %>%
t() %>%
as.data.frame()
Pitag <- summarize_taxonomy(input = itag, level = 2, report_higher_tax = F) %>%
plot_taxa_bars(.,
itag$map_loaded,
"sampleID",
num_taxa = 20,
data_only = TRUE) %>%
filter(taxon != "Other") %>%
filter(taxon %in% names(Pmtag)) %>%
pivot_wider(names_from = group_by,
values_from = mean_value) %>%
column_to_rownames(var = "taxon") %>%
t() %>%
as.data.frame()
sum(rownames(Pmtag) != rownames(Pitag)) # Good
names_p <- rev(names(Pmtag))
names_p[10] <- "RCP2.54"
names(Pmtag) <- paste0(names(Pmtag),"_m")
names(Pitag) <- paste0(names(Pitag),"_i")
Combined_phyla = data.frame(Pmtag, Pitag)
names(Combined_phyla)
# Function for plotting
compare_abund <- function(data, taxon) {
data <- data %>%
dplyr::select(paste0(taxon, "_i"), paste0(taxon, "_m"))
ggplot(data, aes(x = data[,1], y = data[,2])) +
geom_point(size = 2) +
labs(x = NULL, y = NULL) +
stat_smooth(method = "lm", se = F, size = 0.5, linetype = 1) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", size = 0.2, color = "grey10") +
ggtitle(taxon) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 10, vjust = -1),
axis.text = element_text(size = 6))
}
# Run loop through the taxa
p <- list()
for (i in 1:length(names_p)) {
p[[i]] <- compare_abund(data = Combined_phyla, taxon = names_p[i])
}
grid.arrange(p[[1]], p[[2]], p[[3]], p[[4]],
p[[5]], p[[6]], p[[7]], p[[8]],
p[[9]], p[[10]], p[[11]], p[[12]],
ncol = 4, nrow = 3,
bottom = "iTAG PCR amplicon", left = "mTAG metagenomic")
