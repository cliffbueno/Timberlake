# After looking at microbial alpha and beta diversity it is clear SO4 5B D1 and D2 are switched!
# Fix
for (i in 1:nrow(nc$map_loaded)) {
if (nc$map_loaded$sampleID[i] == "TL_inc_d1_SO4_5B") {
nc$map_loaded$Depth[i] <- "10-15 cm"
nc$map_loaded$sampleID_clean[i] <- "+SO4_5B_D2"
}
}
for (i in 1:nrow(nc$map_loaded)) {
if (nc$map_loaded$sampleID[i] == "TL_inc_d2_SO4_5B") {
nc$map_loaded$Depth[i] <- "0-5 cm"
nc$map_loaded$sampleID_clean[i] <- "+SO4_5B_D1"
}
}
# Add +SO4 core 5 data to 5A and 5B
new_dat <- read_excel("data/Soil pH-Jessie.xls", sheet = 3, na = "NA")
# rows 25, 26, 42, 43
# columns 10 - 24
nc$map_loaded[25, 10:24] <- new_dat[1, 2:16]
nc$map_loaded[26, 10:24] <- new_dat[2, 2:16]
nc$map_loaded[42, 10:24] <- new_dat[3, 2:16]
nc$map_loaded[43, 10:24] <- new_dat[4, 2:16]
# Add two new columns for SO4 and ASW (following N + P type experiments)
# There's SO4, ASW, and both (just like N, P, NP)
nc$map_loaded$SO4 <- recode_factor(nc$map_loaded$Treatment,
"+SO4" = "Sulfate",
"+ASW" = "SaltSulfate")
nc$map_loaded$SO4 <- grepl(x = nc$map_loaded$SO4, pattern = "Sulfate")
nc$map_loaded$ASW <- recode_factor(nc$map_loaded$Treatment,
"+ASW-SO4" = "Salt",
"+ASW" = "SaltSulfate")
nc$map_loaded$ASW <- grepl(x = nc$map_loaded$ASW, pattern = "Salt")
#### 3. Alpha ####
# Get descriptive info
field <- filter_data(nc, "Treatment", keep_vals = "Field")
min(field$map_loaded$rich)
max(field$map_loaded$rich)
lab <- filter_data(nc, "Treatment", filter_vals = "Field")
min(lab$map_loaded$rich)
max(lab$map_loaded$rich)
nc$map_loaded$Treatment2 <- recode_factor(nc$map_loaded$Treatment,
"Control" = "Lab",
"+SO4" = "Lab",
"+ASW-SO4" = "Lab",
"+ASW" = "Lab")
source("~/Documents/GitHub/EastCoast/code/plot_venn_diagram2.R")
plot_venn_diagram2(nc, "Treatment2", pres_thresh = 0.0000000000000000000000000001)
# Include in manuscript as supplemental figure
png("FinalFigs/FigureS2.png", width = 7, height = 5, units = "in", res = 300)
plot_venn_diagram2(nc, "Treatment2", pres_thresh = 0.0000000000000000000000000001)
dev.off()
#### 4. Beta ####
# Get env. vars with no NA
names(nc$map_loaded)
env_nc <- nc$map_loaded %>%
dplyr::select(10:27)
env_nona_nc <- na.omit(env_nc)
nrow(env_nona_nc) # n = 25
#### _Jaccard ####
nc_ja <- calc_dm(nc$data_loaded, method = "jaccard")
set.seed(1150)
adonis2(nc_ja ~ nc$map_loaded$Treatment + nc$map_loaded$Depth) # Both sig
adonis2(nc_ja ~ nc$map_loaded$Depth + nc$map_loaded$Treatment) # No effect of order
anova(betadisper(nc_ja, nc$map_loaded$Treatment)) # Dispersion not homogeneous
anova(betadisper(nc_ja, nc$map_loaded$Depth)) # Dispersion homogeneous
# PCoA with vectors
nc_pcoa <- cmdscale(nc_ja, k = nrow(nc$map_loaded) - 1, eig = T)
set.seed(100)
ef_nc <- envfit(nc_pcoa, env_nc, permutations = 999, na.rm = TRUE)
ef_nc
ordiplot(nc_pcoa)
plot(ef_nc, p.max = 0.05, cex = 0.5)
manual_factor_nc <- 0.45
vec.df_nc <- as.data.frame(ef_nc$vectors$arrows*sqrt(ef_nc$vectors$r)) %>%
mutate(Dim1 = Dim1 * manual_factor_nc,
Dim2 = Dim2 * manual_factor_nc) %>%
mutate(variables = rownames(.)) %>%
filter(ef_nc$vectors$pvals < 0.05) %>%
filter(variables != "Cl_mgL") %>%
mutate(shortnames = c("Salinity", "CH4", "N2O", "CO2", "NH4", "pH", "Br"))
pcoaA1 <- round((eigenvals(nc_pcoa)/sum(eigenvals(nc_pcoa)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(nc_pcoa)/sum(eigenvals(nc_pcoa)))[2]*100, digits = 1)
nc$map_loaded$Axis01 <- scores(nc_pcoa)[,1]
nc$map_loaded$Axis02 <- scores(nc_pcoa)[,2]
micro.hulls <- ddply(nc$map_loaded, c("Treatment"), find_hull)
#png("InitialFigs/Beta_Jac.png", width = 7, height = 5, units = "in", res = 300)
png("FinalFigs/FigureS4.png", width = 7, height = 5, units = "in", res = 300)
ggplot(nc$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Treatment, fill = Treatment),
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 1, aes(colour = Treatment, shape = Depth)) +
geom_segment(data = vec.df_nc,
aes(x = 0, xend = Dim1, y = 0, yend = Dim2),
arrow = arrow(length = unit(0.35, "cm")),
colour = "gray", alpha = 0.6,
inherit.aes = FALSE) +
geom_text(data = vec.df_nc,
aes(x = Dim1, y = Dim2, label = shortnames),
size = 3, color = "black") +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
shape = "Depth") +
scale_colour_viridis_d() +
scale_fill_viridis_d() +
guides(colour = guide_legend(override.aes = list(shape = 15),
order = 1)) +
theme_bw() +
theme(legend.position = c(0,0),
legend.justification = c(0,0),
legend.background = element_blank(),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 10),
plot.margin = margin(5, 5, 5, 5, "pt"))
dev.off()
# Phyla, all samples
tax_sum_phyla <- summarize_taxonomy(input = nc, level = 2, report_higher_tax = F)
nc$map_loaded$sampleID <- rownames(nc$map_loaded)
barsP <- plot_taxa_bars(tax_sum_phyla,
nc$map_loaded,
"sampleID_clean",
num_taxa = 12,
data_only = TRUE) %>%
mutate(taxon = fct_rev(taxon)) %>%
left_join(., nc$map_loaded, by = c("group_by" = "sampleID_clean"))
topphy <- barsP %>%
group_by(taxon) %>%
summarise(mean = mean(mean_value)) %>%
filter(taxon != "Other") %>%
arrange(-mean)
phy <- ggplot(barsP, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, size = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Phylum") +
scale_fill_manual(values = c("grey90", brewer.pal(12, "Paired")[12:1]),
labels = c("Other", phy_stats_lab$StarLab)) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_nested(~ Treatment + Depth, space = "free", scales = "free_x") +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
strip.text = element_text(size = 7),
strip.background = element_rect(size = 0.2),
axis.line.y = element_blank(),
legend.margin = margin(0, 0, 0, 5, unit = "pt"),
legend.box.margin = margin(0, 0, 0, 5, unit = "pt"),
legend.key.size = unit(0.3, "cm"),
panel.spacing.x = unit(c(0.25, 0.5, 0.25, 0.5, 0.25, 0.5, 0.25, 0.5, 0.25), "lines"))
# Guilds all samples
tax_sum_guilds <- summarize_taxonomy(input = nc, level = 9, report_higher_tax = F)
nc$map_loaded$sampleID <- rownames(nc$map_loaded)
barsG <- plot_taxa_bars(tax_sum_guilds,
nc$map_loaded,
"sampleID_clean",
num_taxa = 20,
data_only = TRUE) %>%
filter(taxon != "NA") %>%
droplevels() %>%
mutate(taxon = factor(taxon,
levels = Guild_cols$Guild)) %>%
left_join(., nc$map_loaded, by = c("group_by" = "sampleID_clean"))
tallest_bar <- barsG %>%
group_by(group_by) %>%
summarise(sum = sum(mean_value))
topgui <- barsG %>%
group_by(taxon) %>%
summarise(mean = mean(mean_value)) %>%
arrange(-mean)
gui <- ggplot(barsG, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, size = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Guild") +
scale_fill_manual(values = Guild_cols$color,
labels = gui_stats_lab$StarLab) +
scale_y_continuous(expand = c(max(tallest_bar$sum)/100, max(tallest_bar$sum)/100)) +
facet_nested(~ Treatment + Depth, space = "free", scales = "free_x") +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 8, angle = 90, vjust = 0.5, hjust = 1),
axis.ticks.x = element_blank(),
strip.text = element_blank(),
strip.background = element_rect(size = 0.2),
axis.line.y = element_blank(),
legend.margin = margin(0, 0, 0, -10, unit = "pt"),
legend.box.margin = margin(0, 0, 0, -10, unit = "pt"),
legend.key.size = unit(0.3, "cm"),
panel.spacing.x = unit(c(0.25, 0.5, 0.25, 0.5, 0.25, 0.5, 0.25, 0.5, 0.25), "lines"))
# Check SRB abundance range
srbs <- as.data.frame(t(tax_sum_guilds)) %>%
mutate(srbs = SRB + SRB_syn)
min(srbs$srbs)
max(srbs$srbs)
# Stats
# All data
phy_stats <- taxa_summary_by_sample_type(tax_sum_phyla,
nc$map_loaded,
type_header = 'Treatment',
filter_level = 0.01,
test_type = 'KW') %>%
filter(rownames(.) %in% barsP$taxon) %>%
arrange(desc(rownames(.))) %>%
mutate(Sig = ifelse(pvalsFDR < 0.05, "Pfdr < 0.05", "Pfdr > 0.05"))
gui_stats <- taxa_summary_by_sample_type(tax_sum_guilds,
nc$map_loaded,
type_header = 'Treatment',
filter_level = 0,
test_type = 'KW') %>%
filter(rownames(.) %in% barsG$taxon) %>%
arrange(desc(rownames(.))) %>%
mutate(Sig = ifelse(pvalsFDR < 0.05, "Pfdr < 0.05", "Pfdr > 0.05"))
# But this should be refined. Let's test field vs. lab control. And just lab treatments
fiecon <- filter_data(nc,
"Treatment",
keep_vals = c("Field", "Control"))
sum_phy_fiecon <- summarize_taxonomy(input = fiecon, level = 2, report_higher_tax = F)
phy_stats_fiecon <- taxa_summary_by_sample_type(sum_phy_fiecon,
fiecon$map_loaded,
type_header = 'Treatment',
filter_level = 0,
test_type = 'MW') %>%
filter(rownames(.) %in% barsP$taxon) %>%
arrange(desc(rownames(.))) %>%
mutate(Sig = ifelse(pvalsFDR < 0.05, "Pfdr < 0.05", "Pfdr > 0.05")) %>%
mutate(Star = ifelse(pvalsFDR < 0.05, "*", "")) %>%
rownames_to_column(var = "taxon") %>%
arrange(match(taxon, levels(barsP$taxon))) %>%
mutate(StarLab = paste(Guild, Star, sep = " "))
sum_gui_fiecon <- summarize_taxonomy(input = fiecon, level = 9, report_higher_tax = F)
gui_stats_fiecon <- taxa_summary_by_sample_type(sum_gui_fiecon,
fiecon$map_loaded,
type_header = 'Treatment',
filter_level = 0,
test_type = 'MW') %>%
filter(rownames(.) %in% barsG$taxon) %>%
arrange(desc(rownames(.))) %>%
mutate(Sig = ifelse(pvalsFDR < 0.05, "Pfdr < 0.05", "Pfdr > 0.05"))
lab <- filter_data(nc,
"Treatment",
filter_vals = "Field")
sum_phy_lab <- summarize_taxonomy(input = lab, level = 2, report_higher_tax = F)
phy_stats_lab <- taxa_summary_by_sample_type(sum_phy_lab,
lab$map_loaded,
type_header = 'Treatment',
filter_level = 0,
test_type = 'KW') %>%
filter(rownames(.) %in% barsP$taxon) %>%
arrange(desc(rownames(.))) %>%
mutate(Sig = ifelse(pvalsFDR < 0.05, "Pfdr < 0.05", "Pfdr > 0.05")) %>%
mutate(Star = ifelse(pvalsFDR < 0.05, "*", "")) %>%
rownames_to_column(var = "taxon") %>%
mutate(StarLab = paste(taxon, Star, sep = " "))
sum_gui_lab <- summarize_taxonomy(input = lab, level = 9, report_higher_tax = F)
gui_stats_lab <- taxa_summary_by_sample_type(sum_gui_lab,
lab$map_loaded,
type_header = 'Treatment',
filter_level = 0,
test_type = 'KW') %>%
filter(rownames(.) %in% barsG$taxon) %>%
arrange(desc(rownames(.))) %>%
mutate(Sig = ifelse(pvalsFDR < 0.05, "Pfdr < 0.05", "Pfdr > 0.05")) %>%
mutate(Star = ifelse(pvalsFDR < 0.05, "*", "")) %>%
rownames_to_column(var = "Guild") %>%
left_join(., Guild_cols, by = "Guild") %>%
arrange(Index) %>%
mutate(StarLab = paste(Guild, Star, sep = " "))
# Phyla, all samples
tax_sum_phyla <- summarize_taxonomy(input = nc, level = 2, report_higher_tax = F)
nc$map_loaded$sampleID <- rownames(nc$map_loaded)
barsP <- plot_taxa_bars(tax_sum_phyla,
nc$map_loaded,
"sampleID_clean",
num_taxa = 12,
data_only = TRUE) %>%
mutate(taxon = fct_rev(taxon)) %>%
left_join(., nc$map_loaded, by = c("group_by" = "sampleID_clean"))
topphy <- barsP %>%
group_by(taxon) %>%
summarise(mean = mean(mean_value)) %>%
filter(taxon != "Other") %>%
arrange(-mean)
phy <- ggplot(barsP, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, size = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Phylum") +
scale_fill_manual(values = c("grey90", brewer.pal(12, "Paired")[12:1]),
labels = c("Other", phy_stats_lab$StarLab)) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_nested(~ Treatment + Depth, space = "free", scales = "free_x") +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
strip.text = element_text(size = 7),
strip.background = element_rect(size = 0.2),
axis.line.y = element_blank(),
legend.margin = margin(0, 0, 0, 5, unit = "pt"),
legend.box.margin = margin(0, 0, 0, 5, unit = "pt"),
legend.key.size = unit(0.3, "cm"),
panel.spacing.x = unit(c(0.25, 0.5, 0.25, 0.5, 0.25, 0.5, 0.25, 0.5, 0.25), "lines"))
# Guilds all samples
tax_sum_guilds <- summarize_taxonomy(input = nc, level = 9, report_higher_tax = F)
nc$map_loaded$sampleID <- rownames(nc$map_loaded)
barsG <- plot_taxa_bars(tax_sum_guilds,
nc$map_loaded,
"sampleID_clean",
num_taxa = 20,
data_only = TRUE) %>%
filter(taxon != "NA") %>%
droplevels() %>%
mutate(taxon = factor(taxon,
levels = Guild_cols$Guild)) %>%
left_join(., nc$map_loaded, by = c("group_by" = "sampleID_clean"))
tallest_bar <- barsG %>%
group_by(group_by) %>%
summarise(sum = sum(mean_value))
topgui <- barsG %>%
group_by(taxon) %>%
summarise(mean = mean(mean_value)) %>%
arrange(-mean)
gui <- ggplot(barsG, aes(group_by, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, size = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Guild") +
scale_fill_manual(values = Guild_cols$color,
labels = gui_stats_lab$StarLab) +
scale_y_continuous(expand = c(max(tallest_bar$sum)/100, max(tallest_bar$sum)/100)) +
facet_nested(~ Treatment + Depth, space = "free", scales = "free_x") +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 8, angle = 90, vjust = 0.5, hjust = 1),
axis.ticks.x = element_blank(),
strip.text = element_blank(),
strip.background = element_rect(linewidth = 0.2),
axis.line.y = element_blank(),
legend.margin = margin(0, 0, 0, -10, unit = "pt"),
legend.box.margin = margin(0, 0, 0, -10, unit = "pt"),
legend.key.size = unit(0.3, "cm"),
panel.spacing.x = unit(c(0.25, 0.5, 0.25, 0.5, 0.25, 0.5, 0.25, 0.5, 0.25), "lines"))
plot_grid(phy, gui, ncol = 1, rel_heights = c(0.45, 0.55), align = "v")
plot_grid(phy, gui, ncol = 1, rel_heights = c(0.45, 0.55), align = "v", labels = "auto")
png("FinalFigs/Figure4.png", width = 8, height = 6, units = "in", res = 300)
plot_grid(phy, gui, ncol = 1, rel_heights = c(0.45, 0.55), align = "v", labels = "auto")
dev.off()
#### 6. Indicators ####
#### _Simper ####
nc$map_loaded$TrtDepth <- paste(nc$map_loaded$Treatment, nc$map_loaded$Depth, sep = "")
nc_sim <- simper(t(nc$data_loaded),
nc$map_loaded$TrtDepth)
nc_s <- summary(nc_sim)
nc_df1 <- head(nc_s$`Control0-5 cm_+SO40-5 cm`, n = 10) %>%
mutate(Comparison = "Control_+SO4",
ASV = rownames(.),
Depth = "0-5 cm") %>%
rename("MeanControl" = ava,
"MeanTrt" = avb)
nc_df2 <- head(nc_s$`+ASW-SO40-5 cm_Control0-5 cm`, n = 10) %>%
mutate(Comparison = "Control_+ASW-SO4",
ASV = rownames(.),
Depth = "0-5 cm") %>%
rename("MeanControl" = avb,
"MeanTrt" = ava)
nc_df3 <- head(nc_s$`+ASW0-5 cm_Control0-5 cm`, n = 10) %>%
mutate(Comparison = "Control_+ASW",
ASV = rownames(.),
Depth = "0-5 cm") %>%
rename("MeanControl" = avb,
"MeanTrt" = ava)
nc_df4 <- head(nc_s$`+SO410-15 cm_Control10-15 cm`, n = 10) %>%
mutate(Comparison = "Control_+SO4",
ASV = rownames(.),
Depth = "10-15 cm") %>%
rename("MeanControl" = avb,
"MeanTrt" = ava)
nc_df5 <- head(nc_s$`+ASW-SO410-15 cm_Control10-15 cm`, n = 10) %>%
mutate(Comparison = "Control_+ASW-SO4",
ASV = rownames(.),
Depth = "10-15 cm") %>%
rename("MeanControl" = avb,
"MeanTrt" = ava)
nc_df6 <- head(nc_s$`+ASW10-15 cm_Control10-15 cm`, n = 10) %>%
mutate(Comparison = "Control_+ASW",
ASV = rownames(.),
Depth = "10-15 cm") %>%
rename("MeanControl" = avb,
"MeanTrt" = ava)
nc_simper_results <- rbind(nc_df1, nc_df2, nc_df3, nc_df4, nc_df5, nc_df6) %>%
left_join(., nc$taxonomy_loaded, by = c("ASV" = "taxonomy8")) %>%
mutate(Response = ifelse(MeanTrt > MeanControl, "Positive", "Negative")) %>%
rename("OTU" = "ASV") %>%
mutate(OTU = gsub("ASV", "OTU", OTU)) %>%
rename(c("Domain" = "taxonomy1",
"Phylum" = "taxonomy2",
"Class" = "taxonomy3",
"Order" = "taxonomy4",
"Family" = "taxonomy5",
"Genus" = "taxonomy6",
"Species" = "taxonomy7",
"Guild" = "taxonomy9",
"CumulativeContribution" = "cumsum")) %>%
mutate(MeanTrt = round((MeanTrt/82312)*100, digits = 2),
MeanControl = round((MeanControl/82312)*100, digits = 2),
CumulativeContribution = round(CumulativeContribution*100, digits = 2)) %>%
unite(Taxonomy, Phylum, Class, Order, Family, Genus, Species, OTU,
sep = "; ") %>%
mutate(Taxonomy = make.unique(Taxonomy)) %>%
dplyr::select(Comparison, Depth, Response, Domain, Guild, Taxonomy, MeanTrt,
MeanControl, CumulativeContribution)
View(nc_df1)
View(nc$taxonomy_loaded)
# Get % rel. abundance for the top 10 contributors of each comparison
tax_sum_ASV <- summarize_taxonomy(input = nc, level = 8, report_higher_tax = F)
View(tax_sum_ASV)
View(tax_sum_ASV)
nc_df1_abund <- tax_sum_ASV %>%
filter(rownames(.) %in% nc_df1$ASV)
View(nc_df1_abund)
nc_df1_abund <- tax_sum_ASV %>%
filter(rownames(.) %in% nc_df1$ASV) %>%
rowSums(.)
nc_df1_abund <- tax_sum_ASV %>%
filter(rownames(.) %in% nc_df1$ASV) %>%
rowSums(.) %>%
as.data.frame()
nc_df1_abund <- tax_sum_ASV %>%
filter(rownames(.) %in% nc_df1$ASV)
nc_df1_abund <- tax_sum_ASV %>%
filter(rownames(.) %in% nc_df1$ASV) %>%
rowSums(.) %>%
as.data.frame()
nc_df1_abund <- tax_sum_ASV %>%
filter(rownames(.) %in% nc_df1$ASV) %>%
colSums(.) %>%
as.data.frame()
nc_df1_abund <- tax_sum_ASV %>%
filter(rownames(.) %in% nc_df1$ASV) %>%
colSums(.) %>%
as.data.frame() %>%
set_names("RelAbund") %>%
rownames_to_column(var = "sampleID")
View(nc_df1_abund)
nc_df1_abund <- tax_sum_ASV %>%
filter(rownames(.) %in% nc_df1$ASV) %>%
colSums(.) %>%
as.data.frame() %>%
set_names("RelAbund") %>%
rownames_to_column(var = "sampleID") %>%
mutate(Comparison = "Comp. 1")
nc_df1_abund <- tax_sum_ASV %>%
filter(rownames(.) %in% nc_df1$ASV) %>%
colSums(.) %>%
as.data.frame() %>%
set_names("RelAbund") %>%
rownames_to_column(var = "sampleID") %>%
mutate(Comparison = "Comp. 1")
nc_df2_abund <- tax_sum_ASV %>%
filter(rownames(.) %in% nc_df2$ASV) %>%
colSums(.) %>%
as.data.frame() %>%
set_names("RelAbund") %>%
rownames_to_column(var = "sampleID") %>%
mutate(Comparison = "Comp. 2")
nc_df3_abund <- tax_sum_ASV %>%
filter(rownames(.) %in% nc_df3$ASV) %>%
colSums(.) %>%
as.data.frame() %>%
set_names("RelAbund") %>%
rownames_to_column(var = "sampleID") %>%
mutate(Comparison = "Comp. 3")
nc_df4_abund <- tax_sum_ASV %>%
filter(rownames(.) %in% nc_df4$ASV) %>%
colSums(.) %>%
as.data.frame() %>%
set_names("RelAbund") %>%
rownames_to_column(var = "sampleID") %>%
mutate(Comparison = "Comp. 4")
nc_df5_abund <- tax_sum_ASV %>%
filter(rownames(.) %in% nc_df5$ASV) %>%
colSums(.) %>%
as.data.frame() %>%
set_names("RelAbund") %>%
rownames_to_column(var = "sampleID") %>%
mutate(Comparison = "Comp. 5")
nc_df6_abund <- tax_sum_ASV %>%
filter(rownames(.) %in% nc_df6$ASV) %>%
colSums(.) %>%
as.data.frame() %>%
set_names("RelAbund") %>%
rownames_to_column(var = "sampleID") %>%
mutate(Comparison = "Comp. 6")
check_abund <- rbind(nc_df1_abund, nc_df2_abund, nc_df3_abund,
nc_df4_abund, nc_df5_abund, nc_df6_abund)
View(check_abund)
check_abund_min_max <- check_abund %>%
group_by(Comparison) %>%
summarise(min = min(RelAbund),
max = max(RelAbund))
View(check_abund_min_max)
View(nc_df3_abund)
nc_df3_abund <- tax_sum_ASV %>%
filter(rownames(.) %in% nc_df3$ASV)
View(nc_df3_abund)
View(check_abund)
258/6
mean(check_abund$RelAbund)
se(check_abund$RelAbund)
